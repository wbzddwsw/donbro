[{"content":"14号那天朋友告诉我实验剧场16、17号晚上有表演，当时还在为科目四紧张得不行，虽然想去但保险起见还是没有在戏迷群里接龙，16号下午考完拿到驾驶证，想去看表演的心就怎么也抑制不住了，于是直奔剧场。\n虽然遭遇了公交坐过站的乌龙事件那个公交车真是离大谱，每次广播到站名的时候就消音，我对这个地方又不熟！，但不仅没有迟到，甚至还是第一个到的！找发票的小姐姐拿了两天的票，我问她17号的票也是今天拿吗，她说你确定能来就行，出于对自己拖拉性格的了解，为了避免第二天放自己鸽子于是果断拿了票，占了位子就不好意思不来了ξ( ✿＞◡❛)\n时间还早于是去吃了心心念念很久的李易！14r的牛肉鸭肉双拼，分量超足但是真的好辣（好辣（好辣……\n16号 （这天没带相机，图都来自戏迷群。）\n《宋江杀惜》 这一折还挺长的，差不多有一个小时，讲的是阎惜娇步步紧逼宋江为保梁山兄弟性命不得不把她杀了。\n我是没有看过水浒的，所以也不太清楚他俩之间的恩恩怨怨，开场就是阎惜娇有了喜欢的人想重新嫁人，为此要从宋江那里拿到休书，但是宋江不愿意给，理由居然是他这辈子“不嫁妻不纳妾”，天哪你俩都相看两相厌了干嘛强留人家（\n阎婆还想着夫妻床头打架床尾合，逼他俩睡一晚，这里对话好好玩：\n1 2 3 4 5 6 7 8 9 10 11 12 13 宋江：你女儿不贤 阎婆：你惯的 阎婆：来我家坐坐吧 宋江：只是坐坐 阎婆：好的好的，（转头）女儿快来 宋江：不要喊她 阎婆：好的好的，（转头）女儿快来 阎婆：我俩吃穿都靠他接济，女儿你叫他一声吧 阎惜娇：你老蒙了吧 阎婆：看在我的份上宋先生你喊一声我女儿吧 宋江：你老癫了吧 然后宋江不小心落下了晁盖给他写的信，阎惜娇捡到信逼宋江写了休书按了手印，转头又打算后悔要送他去见官，宋江忍无可忍把她刺死了。\n这里演的时候有个特别好笑的，阎惜娇倒地以后宋江在她身上找那封信，半天没翻出来，然后女演员自己把信掏出来递给他了，台下笑成一片。\n宋江说自己给阎婆养老送终，阎婆保证自己不会胡言乱语，然后他俩去街上买棺材，结果一到街上阎婆就大喊宋江杀人了，我还以为她真的接受宋江给她养老呢！世上还是妈妈好……\n《祭塔》 这一出讲的是白素贞的儿子在雷峰塔前哭，然后塔神心软让他们母子在梦里见上一面。\n白素贞超级漂亮！个子不太高看着像个精致的小手办suki\n有一段很有印象的唱词：\n1 2 3 许仕林：我要去找法海讲理 白素贞：我不是得罪了他一个人，这是诸天神佛一起降下的冤屈但是你小青姨会来救我的，你爹呢 许仕林：我爹上金山了我现在无父无母 就说男的靠不住吧！！！\nps.我第一次知道白素贞和许仙的儿子是文曲星……\n《百花赠剑》 这一出讲的是小生海俊被奸人设计送入公主寝殿，没想到公主的贴身侍女江花佑是海俊失散的妹妹，公主也非常通情达理不仅没有怪他还把自己的剑送给他当定情信物，没错他俩一见钟情了x\n大家的衣服都特别华丽，侍女出场的时候我还以为她就是公主（\n但我不是很喜欢这个剧情，俩人互诉衷肠以后海俊就提出要和公主欢好，我当时：？你不是正人君子的设定吗你ooc了吧！幸好公主拒绝了(#`皿´)\n后续剧透 去查了资料后才知道，原来海俊是朝廷派来的间谍，公主他爹因此造反失败然后公主自刎了……天哪不要靠近男的（？ 《做文章》 这一出纯喜剧，讲这个丞相儿子（好像是）非常不学无术，家里让他做文章他死活写不出来，就让小厮代笔，结果小厮写的太好然后要他去招亲，他长得也难看于是又让小厮代替他去。\n有个比喻很好玩，他说自己写文章就像女人生孩子，但是女人肚子里有货，他实在是一点货也没有hhhhh\n《大归》 今晚的压轴大戏！讲述的是曾国藩的儿媳妇唐群英，在相继死了老公和女儿后，不愿意做个所谓的“节妇“，毅然选择大归，但是被曾家各种阻拦。\n婆婆说她会被人戳一辈子脊梁骨无法抬头，老公的阴魂说他这一走就再也无法相见，公爹说她一定是耐不住寂寞想找男人，败坏曾家女人的名声，但都没有留住她。\n她说自己要做一只山鸟，最后一幕终于跨出曾家大门，奔向了梦寐以求的自由。\n《大归》开始的时候已经快10点钟了，有些人已经离场，感觉观众都有点提不起劲了，但是一开场就完全吸引了所有人的注意，我今天早上5点起的床都看得起鸡皮疙瘩，中途甚至没能腾出手来拍一张照，全身心沉浸了。\n在B站搜到了视频，感兴趣的可以看看，舞台效果真的特别好，合唱震撼人心，还有那三扇道具门的打光不知道是怎么做到的，和唱词的配合简直了！\n17号 《鹦鹉记》 17号是全本的鹦鹉记讲道理我看完了也没理解为什么叫鹦鹉记，这个故事其实蛮简单的：\n苏妃怀了孕，皇帝把三件国宝交给她保管，结果被梅妃搞坏了，两人一起告御状，丞相潘葛和梅伦一起查案，皇帝知道梅家兄妹权倾朝野，肯定会搞鬼，就写了一封颠倒圣旨，说有罪的释放，无罪的处斩。\n谁知道梅伦不按常理出牌，查出了梅妃有罪的真相，这下没罪的苏妃反而要被砍头，潘葛就想救苏妃和她的孩子一命，丞相夫人因为和苏妃长得很像，加上她自己身体不太好，于是自愿替苏妃去死，大家演了一出偷梁换柱。\n潘葛不理朝政13年，13年后苏妃给潘葛来信说太子长大了，准备回京面圣，潘葛试探了皇帝的悔意他一把年纪了一个儿子也没有！后告诉了他真相，最后皇帝一家三口重逢。\n潘葛：你倒是圆满了可怜了我老婆呜呜呜呜\n就是说！最后皇帝夸潘葛是忠诚，问他想要什么，你好歹给李夫人追封一下呢！潘葛干脆说自己就想早点去死好见老婆x\n好在最后谢幕的时候让丞相一家三口再见面了！\n有个好玩的点，皇帝和丞相儿子是同一个人演的，丞相儿子年轻的时候又是那种比较敢说的憨憨，于是成为了全剧唯一一个吐槽皇帝（自己）的人，他和丞相上一幕演君臣下一幕演父子，但是演的很好一点儿都不出戏~\n终于写完了！还有很多小细节但是没有当场记下来我就想不起来了啊啊啊啊，总之这两天都看得很开心！期待下次！\n","date":"2025-04-18T15:23:55+08:00","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/4c680f6b-8113-4b24-9041-d97a10b35857.jpg","permalink":"http://localhost:1313/p/yingwuji/","title":"折子戏与鹦鹉记"},{"content":"基础设置 整体 背景 参考【Hugo】修改博客背景并引入动态背景 字体/鼠标 参考【Hugo】Stack主题自定义修改 布局 首页布局调整 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 /*主页布局间距调整*/ .main-container { gap: 50px; //文章宽度 @include respond(md) { padding: 0 30px; gap: 40px; //中等屏幕时的文章宽度 } } .related-contents { overflow-x: visible; //显示隐藏的图标 padding-bottom: 15px; } 页面三栏调整 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 //页面三栏宽度调整 .container { margin-left: auto; margin-right: auto; .left-sidebar { order: -3; max-width: var(--left-sidebar-max-width); } .right-sidebar { order: -1; max-width: var(--right-sidebar-max-width); /// Display right sidebar when min-width: lg @include respond(lg) { display: flex; } } \u0026amp;.extended { @include respond(md) { max-width: 1024px; --left-sidebar-max-width: 25%; --right-sidebar-max-width: 22% !important; } @include respond(lg) { max-width: 1280px; --left-sidebar-max-width: 20%; --right-sidebar-max-width: 30%; } @include respond(xl) { max-width: 1453px; //1536px; --left-sidebar-max-width: 15%; --right-sidebar-max-width: 25%; } } \u0026amp;.compact { @include respond(md) { --left-sidebar-max-width: 25%; max-width: 768px; } @include respond(lg) { max-width: 1024px; --left-sidebar-max-width: 20%; } @include respond(xl) { max-width: 1280px; } } } 归档页双栏 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // 归档页面两栏 @media (min-width: 1024px) { .article-list--compact { display: grid; grid-template-columns: 1fr 1fr; background: none; box-shadow: none; gap: 1rem; article { background: var(--card-background); border: none; box-shadow: var(--shadow-l2); margin-bottom: 8px; border-radius: 16px; } } } 友链三栏 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // 友情链接三栏 @media (min-width: 1024px) { .article-list--compact.links { display: grid; grid-template-columns: 1fr 1fr 1fr; background: none; box-shadow: none; gap: 1rem; article { background: var(--card-background); border: none; box-shadow: var(--shadow-l2); margin-bottom: 8px; border-radius: var(--card-border-radius); \u0026amp;:nth-child(odd) { margin-right: 8px; } } } } 小图片样式 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 //全局页面小图片样式微调 .article-list--compact article .article-image img { width: var(--image-size); height: var(--image-size); object-fit: cover; border-radius: 17%; } 间距调整 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 // 全局页面布局间距调整 .main-container { min-height: 100vh; align-items: flex-start; padding: 0 15px; gap: var(--section-separation); padding-top: var(--main-top-padding); @include respond(md) { padding: 0 37px; } } 细节 页面基本配色 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // 页面基本配色 :root { // 全局顶部边距 --main-top-padding: 30px; // 全局卡片圆角 --card-border-radius: 25px; // 标签云卡片圆角 --tag-border-radius: 8px; // 卡片间距 --section-separation: 40px; // 全局字体大小 --article-font-size: 1.8rem; // 行内代码背景色 --code-background-color: #f8f8f8; // 行内代码前景色 --code-text-color: #e96900; // 暗色模式下样式 \u0026amp;[data-scheme=\u0026#34;dark\u0026#34;] { // 行内代码背景色 --code-background-color: #ff6d1b17; // 行内代码前景色 --code-text-color: #e96900; } } 归档页增加标签 代码 1.在 layouts/_default/archives.html里的/header后添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 {{- $taxonomy := $.Site.GetPage \u0026#34;taxonomyTerm\u0026#34; \u0026#34;tags\u0026#34; -}} {{- $terms := $taxonomy.Pages -}} {{ if $terms }} \u0026lt;section class=\u0026#34;widget tagCloud\u0026#34;\u0026gt; \u0026lt;h2 class=\u0026#34;section-title\u0026#34;\u0026gt;{{ $taxonomy.Title }}\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026#34;tagCloud-tags\u0026#34;\u0026gt; {{ if ne (len $.Site.Taxonomies.tags) 0 }} {{ range $name, $taxonomy := $.Site.Taxonomies.tags }} {{ $tagCount := len $taxonomy.Pages }} \u0026lt;a href=\u0026#34;{{ \u0026#34;/tags/\u0026#34; | relURL }}{{ $name | urlize }}\u0026#34; class=\u0026#34;tagCloud-tags\u0026#34;\u0026gt; {{ $name }}\u0026lt;span class=\u0026#34;tagCloud-count\u0026#34;\u0026gt;{{ $tagCount }}\u0026lt;/span\u0026gt; \u0026lt;/a\u0026gt; {{ end }} {{ end }} \u0026lt;/div\u0026gt; \u0026lt;section\u0026gt; {{ end }} 代码 2.在 assets/scss/partials/widgets.scss 中添加：(设置数字颜色)\r1 2 3 4 5 .tagCloud { .tagCloud-count { color: var(--body-text-color); } } 归档页圆角标签 代码 1.在 assets/scss/variables.scss 中修改：\r1 2 --tag-border-radius: 24px; // Change from 4px to make it round corner --category-border-radius: 4px; // Add category border setting 代码 2.在 assets/scss/partials/article.scss 中找到.article-category并替换：（调整分类样式）\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 .article-category { display: flex; flex-wrap: wrap; gap: 10px; a { background: var(--card-background); box-shadow: var(--shadow-l1); border-radius: var(--category-border-radius); padding: 8px 20px; color: var(--card-text-color-main); font-size: 1.4rem; transition: box-shadow 0.3s ease; \u0026amp;:hover { box-shadow: var(--shadow-l2); } } } 代码 3.在 assets/scss/partials/widgets.scss 中添加：（保留分类样式）\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /* Category widget */ .category { .category-label { display: flex; flex-wrap: wrap; gap: 10px; a { background: var(--card-background); box-shadow: var(--shadow-l1); border-radius: var(--category-border-radius); padding: 8px 20px; color: var(--card-text-color-main); font-size: 1.4rem; transition: box-shadow 0.3s ease; \u0026amp;:hover { box-shadow: var(--shadow-l2); } } } .category-count { margin-left: 7px; color: var(--body-text-color); } } 代码 4.在 layouts/partials/widget/categories.html 中修改：（显示分类条目数量）\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026lt;section class=\u0026#34;widget category\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;widget-icon\u0026#34;\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;categories\u0026#34; }} \u0026lt;/div\u0026gt; \u0026lt;h2 class=\u0026#34;widget-title section-title\u0026#34;\u0026gt;{{ T \u0026#34;widget.categoriesCloud.title\u0026#34; }}\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026#34;category-label\u0026#34;\u0026gt; {{ range first $limit $context.Site.Taxonomies.categories.ByCount }} \u0026lt;a href=\u0026#34;{{ .Page.RelPermalink }}\u0026#34; class=\u0026#34;font_size_{{ .Count }}\u0026#34;\u0026gt; {{ .Page.Title }}\u0026lt;span class=\u0026#34;category-count\u0026#34;\u0026gt;{{ .Count }}\u0026lt;/span\u0026gt; \u0026lt;/a\u0026gt; {{ end }} \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; 代码 5.在 assets/scss/partials/layout/article.scss 中修改：（保留代码的方形copy按钮）\r1 2 3 .copyCodeButton { border-radius: var(--category-border-radius); } 代码 6.在 assets/scss/partials/layout/article.scss 中修改：（保留文内的inline代码）\r1 2 3 code { border-radius: var(--category-border-radius); } 缩小分类尺寸 代码 在 assets/scss/partials/layout/list.scss 中修改数值：\r1 2 3 4 5 6 7 8 9 .article-list--tile { display: flex; padding-bottom: 0px; // Narrow the spacing article { width: 150px; // Make category cards smaller height: 90px; margin-right: 5px; // Make cards spacing narrower flex-shrink: 0; 首页分类颜色 代码 1.在对应分类文件夹里的 _index.md 文件里定义背景色：\r1 2 3 4 5 6 7 8 --- # content/categories/life/_index.md title: 未名之地 # Badge style style: background: \u0026#34;#d09daa\u0026#34; //就是这个颜色 color: \u0026#34;#fff\u0026#34; --- 代码 2.在 assets/scss/partials/widgets.scss 里找到.category-label并在如下位置增加border-left设置：\r1 2 3 4 5 6 7 8 .category-label { display: flex; flex-wrap: wrap; gap: 10px; a { border-left: 6px solid; // Set border for category widget background: var(--card-background); 代码 3.在 layouts/partials/widget/categories.html 里找到category-label并修改：\r1 2 3 4 5 6 7 \u0026lt;div class=\u0026#34;category-label\u0026#34;\u0026gt; {{ range first $limit $context.Site.Taxonomies.categories.ByCount }} \u0026lt;a href=\u0026#34;{{ .Page.RelPermalink }}\u0026#34; class=\u0026#34;font_size_{{ .Count }}\u0026#34; style=\u0026#34;border-left-color: {{ .Page.Params.style.background }}; filter:saturate(1.7);\u0026#34;\u0026gt; //filter是高饱和度，不需要可以删 {{ .Page.Title }}\u0026lt;span class=\u0026#34;category-count\u0026#34;\u0026gt;{{ .Count }}\u0026lt;/span\u0026gt; \u0026lt;/a\u0026gt; {{ end }} 菜单栏圆角 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 // 菜单栏样式 // 下拉菜单改圆角样式 .menu { padding-left: 0; list-style: none; flex-direction: column; overflow-x: hidden; overflow-y: scroll; flex-grow: 1; font-size: 1.6rem; background-color: var(--card-background); box-shadow: var(--shadow-l2); //改个阴影 display: none; margin: 0; //改为0 border-radius: 10px; //加个圆角 padding: 30px 30px; @include respond(xl) { padding: 15px 0; } \u0026amp;, .menu-bottom-section { gap: 30px; @include respond(xl) { gap: 25px; } } \u0026amp;.show { display: flex; } @include respond(md) { align-items: flex-end; display: flex; background-color: transparent; padding: 0; box-shadow: none; margin: 0; } li { position: relative; vertical-align: middle; padding: 0; @include respond(md) { width: 100%; } svg { stroke-width: 1.33; width: 20px; height: 20px; } a { height: 100%; display: inline-flex; align-items: center; color: var(--body-text-color); gap: var(--menu-icon-separation); } span { flex: 1; } \u0026amp;.current { a { color: var(--accent-color); font-weight: bold; } } } } 文章封面高度 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 //文章封面高度更改 .article-list article .article-image img { width: 100%; height: 150px; object-fit: cover; @include respond(md) { height: 200px; } @include respond(xl) { height: 305px; } } 滚动条样式 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 //将滚动条修改为圆角样式 //菜单滚动条美化 .menu::-webkit-scrollbar { display: none; } // 全局滚动条美化 html { ::-webkit-scrollbar { width: 20px; } ::-webkit-scrollbar-track { background-color: transparent; } ::-webkit-scrollbar-thumb { background-color: #d6dee1; border-radius: 20px; border: 6px solid transparent; background-clip: content-box; } ::-webkit-scrollbar-thumb:hover { background-color: #a8bbbf; } } 选中区域背景色 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // 设置选中字体的区域背景颜色 //修改选中颜色 ::selection { color: #fff; background: #34495e; } a { text-decoration: none; color: var(--accent-color); \u0026amp;:hover { color: var(--accent-color-darker); } \u0026amp;.link { color: #4288b9ad; font-weight: 600; padding: 0 2px; text-decoration: none; cursor: pointer; \u0026amp;:hover { text-decoration: underline; } } } 内容 图片居中 代码 在 /assets/scss/partials/layout/article.scss Line 256 处添加：\r1 2 3 4 5 6 7 // Center image from url source p \u0026gt; img { display: block; margin: 0 auto; max-width: 100%; height: auto; } 图片圆角阴影 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 // 文章内容图片圆角阴影 .article-page .main-article .article-content { img { max-width: 96% !important; height: auto !important; border-radius: 8px; } } 引用块样式 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // 文章内容引用块样式 .article-content { blockquote { border-left: 6px solid #358b9a1f !important; background: #3a97431f; } } // 修复引用块内容窄页面显示问题 a { word-break: break-all; } code { word-break: break-all; } 代码块样式 代码 在 /assets/scss/custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 // 代码块基础样式修改 .highlight { max-width: 102% !important; background-color: var(--pre-background-color); padding: var(--card-padding); position: relative; border-radius: 20px; margin-left: -7px !important; margin-right: -12px; box-shadow: var(--shadow-l1) !important; \u0026amp;:hover { .copyCodeButton { opacity: 1; } } // keep Codeblocks LTR [dir=\u0026#34;rtl\u0026#34;] \u0026amp; { direction: ltr; } pre { margin: initial; padding: 0; margin: 0; width: auto; } } // light模式下的代码块样式调整 [data-scheme=\u0026#34;light\u0026#34;] .article-content .highlight { background-color: #fff9f3; } [data-scheme=\u0026#34;light\u0026#34;] .chroma { color: #ff6f00; background-color: #fff9f3cc; } 进阶设置 博客运行时间 代码 1.在 layouts/partials/footer/custom.html 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 \u0026lt;!-- layouts/partials/footer/custom.html --\u0026gt; \u0026lt;script\u0026gt; let s1 = \u0026#39;2023-3-18\u0026#39;; //website start date s1 = new Date(s1.replace(/-/g, \u0026#34;/\u0026#34;)); let s2 = new Date(); // Calculate the difference let diffInMilliseconds = s2.getTime() - s1.getTime(); let totalDays = Math.floor(diffInMilliseconds / (1000 * 60 * 60 * 24)); // Create a new date object starting from the initial date let years = s2.getFullYear() - s1.getFullYear(); let months = s2.getMonth() - s1.getMonth(); let days = s2.getDate() - s1.getDate(); // Adjust months and years if necessary if (days \u0026lt; 0) { months -= 1; let prevMonth = new Date(s2.getFullYear(), s2.getMonth(), 0); // Get the last day of the previous month days += prevMonth.getDate(); } if (months \u0026lt; 0) { years -= 1; months += 12; } // Format the result let result = `${years}年${months}月${days}天`; document.getElementById(\u0026#39;runningdays\u0026#39;).innerHTML = result; \u0026lt;/script\u0026gt; 总字数统计 代码 1.在 layouts/partials/footer/footer.html 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026lt;!-- Add total page and word count time --\u0026gt; \u0026lt;section class=\u0026#34;totalcount\u0026#34;\u0026gt; {{$scratch := newScratch}} {{ range (where .Site.Pages \u0026#34;Kind\u0026#34; \u0026#34;page\u0026#34; )}} {{$scratch.Add \u0026#34;total\u0026#34; .WordCount}} {{ end }} {{ $totalWords := $scratch.Get \u0026#34;total\u0026#34; }} {{ $tenThousands := div $totalWords 10000 }} {{ $remainingThousands := mod (div $totalWords 1000) 10 }} 发表了{{ len (where .Site.RegularPages \u0026#34;Section\u0026#34; \u0026#34;post\u0026#34;) }}篇文章 · 总计{{ $tenThousands }}万{{ $remainingThousands }}千字 \u0026lt;br\u0026gt; \u0026lt;/section\u0026gt; 代码 2.在 assets/scss/partials/footer.scss 中修改风格：\r1 2 3 4 5 .totalcount { color: var(--card-text-color-secondary); font-weight: normal; margin-bottom: 5px; } 外部链接后面显示图标 代码 在 layouts/_default/_markup/render-link.html 里{{ .Text | safeHTML }}后面添加：\r1 2 3 4 5 6 7 8 {{ if strings.HasPrefix .Destination \u0026#34;http\u0026#34; }} \u0026lt;span style=\u0026#34;white-space: nowrap;\u0026#34;\u0026gt;\u0026lt;svg width=\u0026#34;.7em\u0026#34; height=\u0026#34;.7em\u0026#34; viewBox=\u0026#34;0 0 21 21\u0026#34; xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34;\u0026gt; \u0026lt;path d=\u0026#34;m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z\u0026#34; fill=\u0026#34;currentColor\u0026#34; /\u0026gt; \u0026lt;path d=\u0026#34;M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z\u0026#34; fill=\u0026#34;currentColor\u0026#34;\u0026gt; \u0026lt;/svg\u0026gt;\u0026lt;/span\u0026gt; {{ end }} 返回顶部按钮 代码 1.在 layouts/partials/footer/components/script.html 里添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \u0026lt;!-- Add back to top button --\u0026gt; \u0026lt;script\u0026gt; function backToTop() { document.documentElement.scrollIntoView({ behavior: \u0026#39;smooth\u0026#39;, }) } window.onload = function () { let scrollTop = this.document.documentElement.scrollTop || this.document.body.scrollTop let totopBtn = this.document.getElementById(\u0026#39;back-to-top\u0026#39;) if (scrollTop \u0026gt; 0) { totopBtn.style.display = \u0026#39;inline\u0026#39; } else { totopBtn.style.display = \u0026#39;none\u0026#39; } } window.onscroll = function () { let scrollTop = this.document.documentElement.scrollTop || this.document.body.scrollTop let totopBtn = this.document.getElementById(\u0026#39;back-to-top\u0026#39;) if (scrollTop \u0026lt; 200) { totopBtn.style.display = \u0026#39;none\u0026#39; } else { totopBtn.style.display = \u0026#39;inline\u0026#39; totopBtn.addEventListener(\u0026#39;click\u0026#39;, backToTop, false) } } \u0026lt;/script\u0026gt; 代码 2.在layouts/partials/footer/custom.html 里添加改按钮颜色background-color和border-color：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 \u0026lt;!-- Add back to top button --\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; id=\u0026#34;back-to-top\u0026#34; title=\u0026#34;返回顶部\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;!--返回顶部 CSS --\u0026gt; \u0026lt;style\u0026gt; #back-to-top { display: none; position: fixed; bottom: 5px; right: 15px; width: 40px; /* Reduced size */ height: 40px; /* Reduced size */ border-radius: 50%; /* Circular button for modern look */ background-color: var(--body-background); box-shadow: var(--shadow-l2); font-size: 20px; /* Adjusted for smaller button */ text-align: center; line-height: 38px; /* Center align arrow */ cursor: pointer; transition: transform 0.3s ease, background-color 0.3s ease; /* Added smooth interaction */ } #back-to-top:before { content: \u0026#34;\u0026#34;; display: inline-block; position: relative; transform: rotate(135deg); height: 8px; /* Reduced size */ width: 8px; /* Reduced size */ border-width: 0 0 2px 2px; border-color: var(--back-to-top-color); border-style: solid; } #back-to-top:hover { transform: scale(1.1); /* Slightly larger on hover */ background-color: var(--accent-background); /* Optional hover effect */ } #back-to-top:hover:before { border-color: var(--accent-color); /* Change arrow color on hover */ } /* Responsive styles */ @media screen and (max-width: 768px) { #back-to-top { bottom: 5px; right: var(--container-padding); width: 30px; /* Slightly smaller for mobile */ height: 30px; font-size: 16px; line-height: 32px; } } @media screen and (min-width: 1024px) { #back-to-top { bottom: 10px; right: 20px; } } @media screen and (min-width: 1280px) { #back-to-top { bottom: 15px; right: 25px; } } @media screen and (min-width: 1536px) { #back-to-top { bottom: 15px; right: 25px; /* visibility: hidden; */ } } \u0026lt;/style\u0026gt; 自定义emoji 参考赛博房子装修计划（4）自定义emoji 短代码应用 custom.scss 在 \\assets\\scss 文件中，新建x.html文件放在 \\layouts\\shortcodes\n使用改成双括号{{、}}\n文本 高亮标记 我是高亮标记 1 {\u0026lt; mark text=\u0026#34;我是高亮标记\u0026#34; \u0026gt;} 代码 在 custom.scss 中添加：\r1 2 3 4 //重点标记 mark{ background: hsla(199, 64%, 63%, 0.696); } 折叠 点我展开\r我是第一段\n我是第二段\r1 2 3 4 5 \u0026lt;details\u0026gt; \u0026lt;summary\u0026gt;点我展开\u0026lt;/summary\u0026gt; 我是第一段\u0026lt;br\u0026gt; 我是第二段 \u0026lt;/details\u0026gt; 代码 新建 detail.html ：\r1 2 3 4 \u0026lt;details\u0026gt; \u0026lt;summary\u0026gt;{{ (.Get 0) | markdownify }}\u0026lt;/summary\u0026gt; {{ .Inner | markdownify }} \u0026lt;/details\u0026gt; 模糊 blur模糊\n换行加空标签\n1 \u0026lt;span class=\u0026#34;blur\u0026#34;\u0026gt;blur模糊\u0026lt;br\u0026gt;换行加空标签\u0026lt;/span\u0026gt; 代码 在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 //文本高斯模糊 .blur { color: transparent; text-shadow:0px 0px 8px var(--card-text-color-main) } .blur:hover { color: transparent; text-shadow:0px 0px 0px var(--card-text-color-main) } 黑色打码 极其醒目的打码\n换行加空标签\n1 \u0026lt;span class=\u0026#34;shady\u0026#34;\u0026gt;极其醒目的打码\u0026lt;br\u0026gt;换行加空标签\u0026lt;/span\u0026gt; 代码 在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 //文本黑幕效果 .shady { color:#000; font-weight: bold; box-shadow: 0px -20px 0px rgba(0,0,0,1) inset; transition: all 0.3s ease; } .shady:hover{ font-weight: bold; color:#FFF; box-shadow: 0px -20px 0px rgba(0,0,0,1) inset; } 抖动 这是基本的摇晃效果。 这个段落有剧烈摇晃效果。 这个段落有慢速摇晃效果。 这个段落有轻微摇晃效果。 这个段落有水平摇晃效果。 这个段落有垂直摇晃效果。 这个段落有旋转摇晃效果。 这个段落有透明度变化摇晃效果。 这个段落有疯狂摇晃效果。 这个段落在悬停时冻结。 这个段落持续摇晃。 1 2 3 4 5 6 7 8 9 10 11 {\u0026lt; shake effect=\u0026#34;shake\u0026#34; \u0026gt;}这是基本的摇晃效果。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-hard\u0026#34; \u0026gt;}这个段落有剧烈摇晃效果。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-slow\u0026#34; \u0026gt;}这个段落有慢速摇晃效果。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-little\u0026#34; \u0026gt;}这个段落有轻微摇晃效果。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-horizontal\u0026#34; \u0026gt;}这个段落有水平摇晃效果。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-vertical\u0026#34; \u0026gt;}这个段落有垂直摇晃效果。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-rotate\u0026#34; \u0026gt;}这个段落有旋转摇晃效果。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-opacity\u0026#34; \u0026gt;}这个段落有透明度变化摇晃效果。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-crazy\u0026#34; \u0026gt;}这个段落有疯狂摇晃效果。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-freeze\u0026#34; \u0026gt;}这个段落在悬停时冻结。{\u0026lt; /shake \u0026gt;} {\u0026lt; shake effect=\u0026#34;shake-constant\u0026#34; \u0026gt;}这个段落持续摇晃。{\u0026lt; /shake \u0026gt;} 代码 新建 shake.html ：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/csshake/1.5.3/csshake.min.css\u0026#34; /\u0026gt; \u0026lt;div class=\u0026#34;shake {{ .Get \u0026#34;effect\u0026#34; }}\u0026#34;\u0026gt;{{ .Inner }}\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;shake\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;shake shake-hard\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;shake shake-slow\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;shake shake-little\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;shake shake-horizontal\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;shake shake-vertical\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;shake shake-rotate\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;shake shake-opacity\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;shake shake-crazy\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;!-- Freeze the animation at that point when :hover --\u0026gt; \u0026lt;div class=\u0026#34;shake shake-freeze\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;!-- Continuous animation instead on :hover --\u0026gt; \u0026lt;div class=\u0026#34;shake shake-constant\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 渐变 抄的美丽配色\n换行加空标签\n再换行再加\n1 \u0026lt;font class=\u0026#34;colorfulfont\u0026#34;\u0026gt; 抄的美丽配色\u0026lt;br\u0026gt;换行加空标签\u0026lt;br\u0026gt;再换行再加\u0026lt;/font\u0026gt; 代码 在 custom.scss 中添加：\r1 2 3 4 5 6 7 //文字颜色渐变 .colorfulfont { background: linear-gradient(to right, rgb(25, 221, 238), #ed4588); //第一个颜色代码是渐变起始色，第二个颜色代码是渐变结束色； -webkit-background-clip: text; background-clip: text; color: transparent; } 键盘样式 Ctrl+Alt+Del\n1 \u0026lt;kbd\u0026gt;Ctrl\u0026lt;/kbd\u0026gt;+\u0026lt;kbd\u0026gt;Alt\u0026lt;/kbd\u0026gt;+\u0026lt;kbd\u0026gt;Del\u0026lt;/kbd\u0026gt; 代码 在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 //键盘标签样式 kbd { margin: 0 .1em; padding: .1em .6em; font-size: .8em; color: #242729; background: #fff; border: 1px solid #adb3b9; border-radius: 3px; box-shadow: 0px 1px 0 rgba(12, 13, 14, 0.2), 0 0 0 2px #fff inset; white-space: nowrap; vertical-align: middle; font-family: SourceHanSerifSC; } 文字位置 文字居左\n文字居中\n文字居右\n1 2 3 {\u0026lt; align left \u0026#34;文字居左\u0026#34; \u0026gt;} {\u0026lt; align center \u0026#34;文字居中\u0026#34; \u0026gt;} {\u0026lt; align right \u0026#34;文字居右\u0026#34; \u0026gt;} 代码 新建 align.html ：\r1 \u0026lt;p style=\u0026#34;text-align:{{ index .Params 0 }}\u0026#34;\u0026gt;{{ index .Params 1 | markdownify }}\u0026lt;/p\u0026gt; 引用 摘抄引用 这里写引用内容，实际使用记得换成双括号。\n作者 作品名 1 2 3 {\u0026lt; blockquote author=\u0026#34;作者\u0026#34; link=\u0026#34;也可以不加啦\u0026#34; title=\u0026#34;作品名\u0026#34; \u0026gt;} 这里写引用内容 {\u0026lt; /blockquote \u0026gt;} 代码 新建 blockquote.html ：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 \u0026lt;!-- reset scratch variables at the start --\u0026gt; {{ $.Scratch.Set \u0026#34;bl_author\u0026#34; false }} {{ $.Scratch.Set \u0026#34;bl_source\u0026#34; false }} {{ $.Scratch.Set \u0026#34;bl_link\u0026#34; false }} {{ $.Scratch.Set \u0026#34;bl_title\u0026#34; false }} {{ if .IsNamedParams }} {{ $.Scratch.Set \u0026#34;bl_author\u0026#34; (.Get \u0026#34;author\u0026#34;) }} {{ $.Scratch.Set \u0026#34;bl_source\u0026#34; (.Get \u0026#34;source\u0026#34;) }} {{ $.Scratch.Set \u0026#34;bl_link\u0026#34; (.Get \u0026#34;link\u0026#34;) }} {{ $.Scratch.Set \u0026#34;bl_title\u0026#34; (.Get \u0026#34;title\u0026#34;) }} {{ else }} \u0026lt;!-- for the positional version if any --\u0026gt; {{ end }} \u0026lt;!-- if title is not set explicitly then we need to beautify the link if length of link is more than 32 chars, we will cut it off by 32 and then drop everything after the last / if any and put it in into title --\u0026gt; {{ with $.Scratch.Get \u0026#34;bl_title\u0026#34; }} \u0026lt;!-- do nothing --\u0026gt; {{ else }} {{ with $.Scratch.Get \u0026#34;bl_link\u0026#34; }} \u0026lt;!-- if link is given --\u0026gt; {{ range last 1 (split ($.Scratch.Get \u0026#34;bl_link\u0026#34; ) \u0026#34;://\u0026#34;) }} \u0026lt;!-- split by :// and then only take the items after it to remove protocol:// --\u0026gt; {{ $.Scratch.Set \u0026#34;title_without_protocol\u0026#34; . }} {{ end }} {{ range last 1 (split ($.Scratch.Get \u0026#34;title_without_protocol\u0026#34; ) \u0026#34;www.\u0026#34;) }} \u0026lt;!-- also remove the www. at the start if any. we are using a second split because all URLS may not start with it --\u0026gt; {{ $.Scratch.Set \u0026#34;title_without_protocol\u0026#34; . }} {{ end }} {{ $.Scratch.Set \u0026#34;bl_title\u0026#34; ($.Scratch.Get \u0026#34;title_without_protocol\u0026#34;) }} \u0026lt;!-- if link is longer than 32 bytes we should trim it --\u0026gt; {{ if (gt (len ($.Scratch.Get \u0026#34;title_without_protocol\u0026#34;) ) 32) }} {{ $title := (slicestr ($.Scratch.Get \u0026#34;title_without_protocol\u0026#34;) 0 32) }} \u0026lt;!-- get the first 32 characters of title_without_protocol --\u0026gt; {{ $split_by_fw_slash := split $title \u0026#34;/\u0026#34; }} \u0026lt;!-- now split on / because we want to stop after the last forward slash --\u0026gt; {{ $count := (sub (len $split_by_fw_slash) 1) }} \u0026lt;!-- we want everything but the last part so we adjust the count accordingly --\u0026gt; {{ $.Scratch.Set \u0026#34;tempstring\u0026#34; \u0026#34;\u0026#34; }} \u0026lt;!-- temp variable to hold the concatinated string --\u0026gt; {{ range first $count $split_by_fw_slash }} \u0026lt;!-- loop through all parts except last and concat them (add / between halves) --\u0026gt; {{ $.Scratch.Set \u0026#34;tempstring\u0026#34; ( . | printf \u0026#34;%s%s/\u0026#34; ($.Scratch.Get \u0026#34;tempstring\u0026#34;) | printf \u0026#34;%s\u0026#34; ) }} {{ end }} {{ $.Scratch.Set \u0026#34;bl_title\u0026#34; ( printf \u0026#34;%s...\u0026#34; ($.Scratch.Get \u0026#34;tempstring\u0026#34;) | printf \u0026#34;%s\u0026#34; ) }} {{ end }} {{ end }} {{ end }} \u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt;{{ .Inner | markdownify }}\u0026lt;/p\u0026gt; \u0026lt;footer style=\u0026#34;text-align:right\u0026#34;\u0026gt; \u0026lt;strong\u0026gt;{{ with $.Scratch.Get \u0026#34;bl_author\u0026#34; }}{{ . }}{{ end }}\u0026lt;/strong\u0026gt; {{ with $.Scratch.Get \u0026#34;bl_source\u0026#34; }} \u0026lt;cite\u0026gt;{{ . }}\u0026lt;/cite\u0026gt; {{ else }} {{ with $.Scratch.Get \u0026#34;bl_link\u0026#34; }} \u0026lt;cite\u0026gt; \u0026lt;a href=\u0026#34;{{ . }}\u0026#34; title=\u0026#34;{{ . }}\u0026#34; rel=\u0026#34;noopener noreferrer\u0026#34;\u0026gt;{{ $.Scratch.Get \u0026#34;bl_title\u0026#34; }}\u0026lt;/a\u0026gt; \u0026lt;!-- can\u0026#39;t have new lines here --\u0026gt; \u0026lt;/cite\u0026gt; {{ else }} {{ with $.Scratch.Get \u0026#34;bl_title\u0026#34; }} \u0026lt;cite\u0026gt; {{ $.Scratch.Get \u0026#34;bl_title\u0026#34; }}\u0026lt;/a\u0026gt; \u0026lt;/cite\u0026gt; {{ end }} {{ end }} {{ end }} \u0026lt;/footer\u0026gt; \u0026lt;/blockquote\u0026gt; 中心引用 左右两边的符号可以自定义\n使用需要双括号\n换行需要空标签\n1 2 3 {\u0026lt; quote-center \u0026gt;} 左右两边的符号可以自定义\u0026lt;br\u0026gt;使用需要双括号\u0026lt;br\u0026gt;换行需要空标签 {\u0026lt; /quote-center \u0026gt;} 代码 1.新建 quote-center.html ：\r1 2 3 4 5 6 \u0026lt;blockquote class=\u0026#34;quote-center\u0026#34;\u0026gt; {{- $content := .Inner | markdownify -}} {{- if not (strings.HasPrefix $content \u0026#34; \u0026lt;p\u0026gt;\u0026#34;) }} {{ printf `\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;%s\u0026lt;/p\u0026gt; ` $content | safeHTML }} {{- else }} {{- $content }} {{- end -}} \u0026lt;/blockquote\u0026gt; 代码 2.在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 // 诗歌引用格式 blockquote.quote-center { position: relative; border-left: none; padding-left: 0; border-top: 0px solid var(--card-separator-color); border-bottom: 0px solid var(--card-separator-color); p { text-align: center !important; margin-top: 1.5em; margin-bottom: 1.5em; } \u0026amp;::before { position: absolute; left: 0; content: \u0026#39;“----\u0026#39;; color: #6496c880; font-size: 3em; font-weight: normal; margin-top: -0.72em; } \u0026amp;::after { position: absolute; right: 0; content: \u0026#39;----”\u0026#39;; color: #6496c880; font-size: 3em; font-weight: normal; margin-top: -1.42em; } } 特殊格式 评分 1 {\u0026lt; rating 10 7 \u0026gt;} 代码 1.新建 rating.html ：\r1 2 3 4 5 6 7 8 9 10 11 \u0026lt;span class=\u0026#34;star-rating\u0026#34;\u0026gt; {{- if ge (.Get 0) (.Get 1) -}} {{- $star_outline := sub (int (.Get 0)) (int (.Get 1)) -}} {{- range $i, $sequence := (seq (.Get 1)) -}} \u0026lt;i class=\u0026#34;star\u0026#34;\u0026gt;\u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 576 512\u0026#34;\u0026gt;\u0026lt;path d=\u0026#34;M381.2 150.3L524.9 171.5C536.8 173.2 546.8 181.6 550.6 193.1C554.4 204.7 551.3 217.3 542.7 225.9L438.5 328.1L463.1 474.7C465.1 486.7 460.2 498.9 450.2 506C440.3 513.1 427.2 514 416.5 508.3L288.1 439.8L159.8 508.3C149 514 135.9 513.1 126 506C116.1 498.9 111.1 486.7 113.2 474.7L137.8 328.1L33.58 225.9C24.97 217.3 21.91 204.7 25.69 193.1C29.46 181.6 39.43 173.2 51.42 171.5L195 150.3L259.4 17.97C264.7 6.954 275.9-.0391 288.1-.0391C300.4-.0391 311.6 6.954 316.9 17.97L381.2 150.3z\u0026#34;/\u0026gt;\u0026lt;/svg\u0026gt;\u0026lt;/i\u0026gt; {{- end -}} {{- range $i, $sequence := (seq $star_outline) -}} \u0026lt;i class=\u0026#34;star-outline\u0026#34;\u0026gt;\u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; viewBox=\u0026#34;0 0 576 512\u0026#34;\u0026gt;\u0026lt;path d=\u0026#34;M381.2 150.3L524.9 171.5C536.8 173.2 546.8 181.6 550.6 193.1C554.4 204.7 551.3 217.3 542.7 225.9L438.5 328.1L463.1 474.7C465.1 486.7 460.2 498.9 450.2 506C440.3 513.1 427.2 514 416.5 508.3L288.1 439.8L159.8 508.3C149 514 135.9 513.1 126 506C116.1 498.9 111.1 486.7 113.2 474.7L137.8 328.1L33.58 225.9C24.97 217.3 21.91 204.7 25.69 193.1C29.46 181.6 39.43 173.2 51.42 171.5L195 150.3L259.4 17.97C264.7 6.954 275.9-.0391 288.1-.0391C300.4-.0391 311.6 6.954 316.9 17.97L381.2 150.3z\u0026#34;/\u0026gt;\u0026lt;/svg\u0026gt;\u0026lt;/i\u0026gt; {{- end -}} {{- end -}} \u0026lt;/span\u0026gt; 代码 2.在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 //星星评级 i.star{ color: hsl(61, 79%, 63%); /*星星的颜色*/ } i.star-outline{ color: hsl(211, 31%, 74%);/*空星星的颜色*/ } i.star svg, i.star-outline svg{ width: 20px; fill: currentColor; } 系列文章 1 代码 1.在对应文章的 front matter 中添加：\r1 2 series = [\u0026#34;建站\u0026#34;] series_order = 1 代码 2.在 layouts/shortcodes/seriesbox.html 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 {{ $series := index .Page.Params.series 0 }} {{ if $series }} {{ $pages := where site.RegularPages \u0026#34;Params.series\u0026#34; \u0026#34;intersect\u0026#34; (slice $series) }} {{ $pages = where $pages \u0026#34;.Params.series_order\u0026#34; \u0026#34;!=\u0026#34; nil }} {{ $pages = sort $pages \u0026#34;Params.series_order\u0026#34; }} {{ if gt (len $pages) 1 }} \u0026lt;details class=\u0026#34;series-box\u0026#34; open\u0026gt; \u0026lt;summary class=\u0026#34;series-title\u0026#34;\u0026gt; 本文属于 \u0026lt;strong\u0026gt;{{ $series }}\u0026lt;/strong\u0026gt; 系列 \u0026lt;/summary\u0026gt; \u0026lt;ol class=\u0026#34;series-list\u0026#34;\u0026gt; {{ range $pages }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34; class=\u0026#34;{{ if eq $.Page.Permalink .Permalink }}active{{ end }}\u0026#34;\u0026gt; {{ printf \u0026#34;§ %d: %s\u0026#34; .Params.series_order .Title }} \u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; {{ end }} \u0026lt;/ol\u0026gt; \u0026lt;/details\u0026gt; {{ end }} {{ end }} 代码 3在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 // series .series-box { background: var(--card-background); border-radius: 0.5rem; padding: 1rem; margin: 2rem 0; box-shadow: var(--shadow-l1); color: var(--card-text-color-main); } .series-box summary, .series-box .series-title { color: var(--body-text-color); font-weight: 600; margin-bottom: 0.75rem; cursor: pointer; } .series-box ol.series-list { padding-left: 1.25rem; margin: 0.5rem 0 0 0; } .series-box li { margin: 0.25rem 0; list-style: none; } .series-box a { color: var(--card-text-color-main); text-decoration: none; } .series-box a.active { font-weight: bold; color: var(--accent-color); } 卡片链接 可以在这里插入链接假装是卡片式链接。\n好像不能插入图片？\n换行需要空标签。实际使用需要双括号。 1 2 3 {\u0026lt; card \u0026gt;} 可以在这里插入链接假装是卡片式链接。\u0026lt;br\u0026gt;好像不能插入图片？\u0026lt;br\u0026gt;换行需要空标签。实际使用需要双括号。 {\u0026lt; /card \u0026gt;} 代码 1.新建 card.html ：\r1 2 3 4 5 6 {{- $raw := (markdownify .Inner | chomp) -}} {{- $block := findRE \u0026#34;(?is)^\u0026lt;(?:address|article|aside|blockquote|canvas|dd|div|dl|dt|fieldset|figcaption|figure|footer|form|h(?:1|2|3|4|5|6)|header|hgroup|hr|li|main|nav|noscript|ol|output|p|pre|section|table|tfoot|ul|video)\\\\b\u0026#34; $raw 1 -}} \u0026lt;div class=\u0026#34;mycard\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;content\u0026#34;\u0026gt;{{- if or $block (not $raw) }}{{ $raw }}{{ else }} {{ $raw }} {{ end -}}\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 代码 2.在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 // 卡片样式 .mycard { padding: 10px 20px; margin: 20px 0; border-radius: 4px; word-break: break-all; background: #d2e5eb14; box-shadow: 0 6px 10px 0 #00000033; .content { line-height: 30px; } } 时间轴 2025-04-01 试试 新建博客 成功了好耶！ 1 {\u0026lt; timeline date=\u0026#34;2025-04-01\u0026#34; title=\u0026#34;新建博客\u0026#34; description=\u0026#34;成功了好耶！\u0026#34; tags=\u0026#34;试试\u0026#34; \u0026gt;} 代码 新建 timeline.html ：\r{{- $date := .Get \u0026#34;date\u0026#34; -}} {{- $title := .Get \u0026#34;title\u0026#34; -}} {{- $description := .Get \u0026#34;description\u0026#34; -}} {{- $tags := .Get \u0026#34;tags\u0026#34; -}} \u0026lt;div class=\u0026#34;timeline__row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;timeline__time\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;timeline__time\u0026#34;\u0026gt;{{ $date }}\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;timeline__split-line\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;timeline__content\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;timeline__tags\u0026#34;\u0026gt; {{- with split $tags \u0026#34;, \u0026#34; -}} {{- range . }}{{- if eq . \u0026#34;样式\u0026#34; }} \u0026lt;span class=\u0026#34;timeline__tag timeline__tag-style\u0026#34;\u0026gt;{{ . }}\u0026lt;/span\u0026gt; {{- else if eq . \u0026#34;文章\u0026#34; }} \u0026lt;span class=\u0026#34;timeline__tag timeline__tag-article\u0026#34;\u0026gt;{{ . }}\u0026lt;/span\u0026gt; {{- else if eq . \u0026#34;页面\u0026#34; }} \u0026lt;span class=\u0026#34;timeline__tag timeline__tag-page\u0026#34;\u0026gt;{{ . }}\u0026lt;/span\u0026gt; {{- else }} \u0026lt;span class=\u0026#34;timeline__tag\u0026#34;\u0026gt;{{ . }}\u0026lt;/span\u0026gt; {{- end }} {{- end }} {{- end }} \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;timeline__title\u0026#34;\u0026gt;{{ $title }}\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;timeline__description\u0026#34;\u0026gt; {{ $description }} \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;style\u0026gt; .timeline { display: flex; flex-direction: column; } .timeline__row { display: flex; padding-left: 4%; height: 90px; } .timeline__time { flex: 0 0 110px; color: #5d5d5d; font-size: 17px; text-transform: uppercase; position: relative; display: flex; flex-direction: column; align-items: center; padding: 0.5rem 0; } .timeline__time-text { margin: 0; } .timeline__split-line { position: absolute; top: 0.5rem; right: -20px; height: 100%; width: 2px; background-color: #84c4e240; z-index: 0; } .timeline__split-line:before { content: \u0026#34;\u0026#34;; position: absolute; top: 24%; right: -4px; transform: translateY(-50%); width: 10px; height: 10px; background-color: #c9e5f2; box-shadow: 0 0 0 4px var(--theme); border-radius: 50%; border: 0px solid #84c4e2; z-index: -1; } .timeline__content { flex: 1; margin-left: 4.5rem; padding: 0.5rem 0 1.2rem 0; } .timeline__title { margin: 0; margin-bottom: 2px; padding-top: 3px; margin-left: 0.5rem; color: var(--content); font-family: var(--font-family-teshu); font-size: 19px; font-weight: 600; width: fit-content; display: inline-block; vertical-align: middle; /* 垂直居中对齐 */ } .timeline__tags { display: inline-block; padding: 0; margin-left: 0.3rem; align-items: center; gap: 0.3rem; } .timeline__tag { display: inline-block; color: var(--secondary); background-color: #84c4e230; border: 1.5px solid #84c4e230; border-radius: 999px; padding: 0rem 0.5rem; font-size: 12px; white-space: nowrap; line-height: 1.4rem; opacity: 0.8; vertical-align: middle; /* 垂直居中对齐 */ } .timeline__description { font-size: 15px; line-height: 1.6; color: #5d5d5d; overflow: hidden; text-overflow: ellipsis; margin: 0.5rem 0 0.4rem 1.5rem; /* 添加 1.5rem 的左侧内边距 */ } /* 为类名为 \u0026#34;timeline__tag-style\u0026#34; 的标签定义颜色 */ .timeline__tag-style { background-color: #c581da; /* 替换为你希望的颜色 */ border-color: #c581da; /* 与背景色相同或不同，根据需要自定义 */ color: #FFFFFF; /* 根据需要选择文本颜色 */ } /* 为类名为 \u0026#34;timeline__tag-article\u0026#34; 的标签定义颜色 */ .timeline__tag-article { background-color: #92d392; /* 替换为你希望的颜色 */ border-color: #92d392; /* 与背景色相同或不同，根据需要自定义 */ color: #000000; /* 根据需要选择文本颜色 */ } /* 为类名为 \u0026#34;timeline__tag-page\u0026#34; 的标签定义颜色 */ .timeline__tag-page { background-color: #707070; /* 替换为你希望的颜色 */ border-color: #707070; /* 与背景色相同或不同，根据需要自定义 */ color: #FFFFFF; /* 根据需要选择文本颜色 */ } @media screen and (max-width: 768px) { .timeline__time { font-size: 14px; /* 在小屏幕上使用较小的字体大小 */ } .timeline__title { font-size: 16px; /* 在小屏幕上使用较小的字体大小 */ } .timeline__description { font-size: 14px; /* 在小屏幕上使用较小的字体大小 */ } } \u0026lt;/style\u0026gt; 对话框 速速 2025-04-01 早上好 gpt 2025-04-01 fine 1 2 {\u0026lt; message from=\u0026#34;self\u0026#34; accountID=\u0026#34;twitter/昵称\u0026#34; images=\u0026#34;1.jpg\u0026#34; timestamp=\u0026#34;2025-04-01\u0026#34; name=\u0026#34;速速\u0026#34; \u0026gt;}}早上好 {\u0026lt; /message \u0026gt;} {\u0026lt; message accountID=\u0026#34;twitter/昵称\u0026#34; images=\u0026#34;1.jpg\u0026#34; timestamp=\u0026#34;2025-04-01\u0026#34; name=\u0026#34;gpt\u0026#34; \u0026gt;}fine {\u0026lt; /message \u0026gt;}} 代码 1.新建 message.html ：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/css/message.css\u0026#34; /\u0026gt; \u0026lt;div class=\u0026#34;message {{if eq (.Get \u0026#34;from\u0026#34;) \u0026#34;self\u0026#34;}}--self{{end}}\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;message__inner\u0026#34;\u0026gt; {{if ne (.Get \u0026#34;accountID\u0026#34;) \u0026#34;\u0026#34;}} \u0026lt;img class=\u0026#34;avatar\u0026#34; src=\u0026#34;https://unavatar.io/{{.Get \u0026#34;accountID\u0026#34;}}\u0026#34; width=\u0026#34;24\u0026#34; height=\u0026#34;24\u0026#34;\u0026gt; {{else}} \u0026lt;img class=\u0026#34;avatar\u0026#34; src=\u0026#34;\u0026#34; width=\u0026#34;24\u0026#34; height=\u0026#34;24\u0026#34; style=\u0026#34;visibility:hidden;\u0026#34;\u0026gt; {{end}} \u0026lt;div class=\u0026#34;message__text\u0026#34;\u0026gt; \u0026lt;hstack class=\u0026#34;message__meta\u0026#34;\u0026gt;{{.Get \u0026#34;name\u0026#34;}} \u0026lt;spacer\u0026gt;\u0026lt;/spacer\u0026gt; {{.Get \u0026#34;timestamp\u0026#34;}}\u0026lt;/hstack\u0026gt; {{.Inner}} {{if ne (.Get \u0026#34;images\u0026#34;) \u0026#34;\u0026#34;}} \u0026lt;div class=\u0026#34;grid-container\u0026#34;\u0026gt; {{range split (.Get \u0026#34;images\u0026#34;) \u0026#34;,\u0026#34;}} \u0026lt;div class=\u0026#34;grid-item\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;message__img\u0026#34; src=\u0026#34;{{.}}\u0026#34; alt=\u0026#34;Image\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; {{end}} \u0026lt;/div\u0026gt; {{end}} \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 代码 2.在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 //对话框 .message { font-size: 16px; width: 80%; margin: 1rem 0; text-align: right; } .message.--self .message__text { background-color: var(--card-background); border: 1px solid #b7d8d865; } .dark .message.--self .message__text { background-color: var(--card-background); border: 1px solid #b7dddd15; } .message.--self .message__text { text-align: left; } .message.--self .message__meta { text-align: right; } .message:not(.--self) { text-align: left; } .message__inner { display: flex; align-items: center; justify-content: flex-end; align-items: flex-end; } .message__inner img { order: 1; } .message:not(.--self) .message__inner { justify-content: flex-start; } .message:not(.--self) .message__inner img { order: 0; } .message__text { margin-left: 8px; display: flex; flex-direction: column; gap: 4px; border: 1px solid var(--border); border-radius: var(--radius); padding: 12px; margin-right: 8px; --list-opacity: 1; background-color: var(--card-background); } .dark .message__text { border: 1px solid var(--border); background: var(--card-background); } .message__meta { color: #888; font-size: 0.8em; } .message.--self { margin-left: auto; } .message:not(.--self) { margin-right: auto; } .grid-container { display: grid; grid-template-columns: repeat(3, 1fr); grid-gap: 10px; } .grid-item { width: 100%; height: 0; padding-bottom: 100%; position: relative; } .grid-item .message__img { object-fit: cover; position: absolute; width: 100%; height: 100%; border-radius: 8px; } .fullsize { object-fit: contain; max-width: 100%; max-height: 100%; } img.avatar{ position: relative; width: 24px; height: 24px; overflow: hidden; border-radius: 12px; box-shadow: inset 0 0 0 1px rgba(105, 105, 105, 0.1); flex-shrink: 0; margin:unset !important; } img.message__img.medium-zoom-image.medium-zoom-image--opened { object-fit: contain; position: absolute; width: 100%; height: 100%; border: unset; box-shadow: unset; } img.message__img { margin: unset !important; } /* 定义手机端样式 */ @media screen and (max-width: 768px) { .message { width: 90%; } } 聊天气泡 John Doe\u0026nbsp;\u0026nbsp;\u0026nbsp;2023-09-12 14:30 这是左边的消息内容。\r2023-09-12 14:45\u0026nbsp;\u0026nbsp;\u0026nbsp;Alice 这是右边的消息内容，测试长长长长长长长长长长长长长长长长长长长长长长长长度。\r1 2 3 4 5 6 7 {\u0026lt; chat position=\u0026#34;left\u0026#34; name=\u0026#34;John Doe\u0026#34; timestamp=\u0026#34;2023-09-12 14:30\u0026#34;\u0026gt;} 这是左边的消息内容。 {\u0026lt; /chat \u0026gt;} {\u0026lt; chat position=\u0026#34;right\u0026#34; name=\u0026#34;Alice\u0026#34; timestamp=\u0026#34;2023-09-12 14:45\u0026#34; \u0026gt;} 这是右边的消息内容，测试长长长长长长长长长长长长长长长长长长长长长长长长度。 {\u0026lt; /chat \u0026gt;} 代码 新建 /layouts/shortcodes/chat.html：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 {{ if eq (.Get \u0026#34;position\u0026#34;) \u0026#34;left\u0026#34; }} \u0026lt;div class=\u0026#34;chat --other\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;chat__inner\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;chat__meta\u0026#34;\u0026gt;{{ .Get \u0026#34;name\u0026#34; }}\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;{{ .Get \u0026#34;timestamp\u0026#34; }}\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;chat__text\u0026#34;\u0026gt; {{ .Inner }} \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; {{ else if eq (.Get \u0026#34;position\u0026#34;) \u0026#34;right\u0026#34; }} \u0026lt;div class=\u0026#34;chat --self\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;chat__inner\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;chat__meta\u0026#34; style=\u0026#34;text-align: right;\u0026#34;\u0026gt;{{ .Get \u0026#34;timestamp\u0026#34; }}\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;{{ .Get \u0026#34;name\u0026#34; }}\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;chat__text\u0026#34;\u0026gt; {{ .Inner }} \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; {{ end }} \u0026lt;style\u0026gt; .chat { margin: 10px; padding: 10px; position: relative; /* 添加相对定位，以便定位尖角箭头 */ transition: transform 0.2s; /* 添加过渡效果，使放大平滑 */ max-width: 80%; min-width: 15%; } .chat:hover { transform: scale(1.05); } .chat.--self { text-align: left; background-color: #ecf5ff; color: #000000; border-radius: 15px; width: fit-content; margin-left: auto; } /* 尖角箭头 */ .chat.--self::before { content: \u0026#34;\u0026#34;; position: absolute; right: -18px; /* 调整箭头位置 */ bottom: 5px; transform: translateY(-50%); border-width: 15px 0 0 20px; border-style: solid; border-color: transparent transparent transparent #ecf5ff; /* 箭头颜色与对话框背景颜色一致 */ } /* 左边对话框样式 */ .chat.--other { text-align: left; background-color: #ffecec; color: #333; border-radius: 15px; position: relative; width: fit-content; } /* 左边对话框的尖角箭头 */ .chat.--other::before { content: \u0026#34;\u0026#34;; position: absolute; left: -18px; bottom: 5px; transform: translateY(-50%); border-width: 15px 20px 0 0; border-style: solid; border-color: transparent #ffecec transparent transparent; } /* 消息元数据样式（名称和时间戳） */ .chat__meta { font-weight: bold; font-size: 0.67em; color: #707070; margin-bottom: 5px; } /* 消息文本样式 */ .chat__text { font-size: 0.9em; margin-left: 10px; word-break: break-all; } [data-scheme=\u0026#34;dark\u0026#34;] { .chat.--self { color: #fefefe; background-color: #253958; } .chat.--self::before { border-color: transparent transparent transparent #253958; } .chat.--other { color: #fefefe; background-color: #1a1a1a; } .chat.--other::before { border-color: transparent #1a1a1a transparent transparent; } .chat__meta { color: #b1b1b1; } } \u0026lt;/style\u0026gt; 代码 2.在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 // notice 短代码 .notice { position:relative; padding: 1em 1em 1em 2.5em; margin-bottom: 1em; border-radius: 4px; p:last-child { margin-bottom: 0; } .notice-title { position: absolute; left: 0.8em; .notice-icon { width: 1.2em; height: 1.2em; } } \u0026amp;.notice-warning { background: hsla(0, 65%, 65%, 0.15); border-left: 5px solid hsl(0, 65%, 65%); .notice-title { color: hsl(0, 65%, 65%); } } \u0026amp;.notice-info { background: hsla(30, 80%, 70%, 0.15); border-left: 5px solid hsl(30, 80%, 70%); .notice-title { color: hsl(30, 80%, 70%); } } \u0026amp;.notice-note { background: hsla(200, 65%, 65%, 0.15); border-left: 5px solid hsl(200, 65%, 65%); .notice-title { color: hsl(200, 65%, 65%); } } \u0026amp;.notice-tip { background: hsla(140, 65%, 65%, 0.15); border-left: 5px solid hsl(140, 65%, 65%); .notice-title { color: hsl(140, 65%, 65%); } } } [data-theme=\u0026#34;dark\u0026#34;] .notice { \u0026amp;.notice-warning { background: hsla(0, 25%, 35%, 0.15); border-left: 5px solid hsl(0, 25%, 35%); .notice-title { color: hsl(0, 25%, 35%); } } \u0026amp;.notice-info { background: hsla(30, 25%, 35%, 0.15); border-left: 5px solid hsl(30, 25%, 35%); .notice-title { color: hsl(30, 25%, 35%); } } \u0026amp;.notice-note { background: hsla(200, 25%, 35%, 0.15); border-left: 5px solid hsl(200, 25%, 35%); .notice-title { color: hsl(200, 25%, 35%); } } \u0026amp;.notice-tip { background: hsla(140, 25%, 35%, 0.15); border-left: 5px solid hsl(140, 25%, 35%); .notice-title { color: hsl(140, 25%, 35%); } } } neodb 1 {\u0026lt; neodb \u0026#34;NeoDB 网址/豆瓣网址\u0026#34; \u0026gt;} 代码 1.在 /layouts/shortcodes/neodb.html 中添加：\r代码 2.在 /assets/scss/custom.scss 中添加：\r1 misskey 直接复制帖子生成的嵌入代码\nB站 1 {\u0026lt; bilibili BV1V7411d7iW 0 1 \u0026gt;} //BV号，0/1为是否自动播放,分p数；使用记得双括号 代码 新建 bilibili.html ：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 {{ $vid := (.Get 0) }} {{ $videopage := default 1 (.Get 1) }} {{ $basicQuery := querify \u0026#34;page\u0026#34; $videopage \u0026#34;high_quality\u0026#34; 1 \u0026#34;as_wide\u0026#34; 1 }} {{ $videoQuery := \u0026#34;\u0026#34; }} {{ if strings.HasPrefix (lower $vid) \u0026#34;av\u0026#34; }} {{ $videoQuery = querify \u0026#34;aid\u0026#34; (strings.TrimPrefix \u0026#34;av\u0026#34; (lower $vid)) }} {{ else if strings.HasPrefix (lower $vid) \u0026#34;bv\u0026#34; }} {{ $videoQuery = querify \u0026#34;bvid\u0026#34; $vid }} {{ else }} \u0026lt;p\u0026gt;Bilibili 视频av号或BV号错误！请检查视频av号或BV号是否正确\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;当前视频av或BV号：{{ $vid }}，视频分P：{{ $videopage }}\u0026lt;/p\u0026gt; {{ end }} \u0026lt;div class=\u0026#34;video-wrapper\u0026#34;\u0026gt; \u0026lt;iframe src=\u0026#34;https://player.bilibili.com/player.html?{{ $basicQuery | safeURL }}\u0026amp;{{ $videoQuery | safeURL }}\u0026#34; scrolling=\u0026#34;no\u0026#34; frameborder=\u0026#34;no\u0026#34; framespacing=\u0026#34;0\u0026#34; allowfullscreen=\u0026#34;true\u0026#34; \u0026gt; \u0026lt;/iframe\u0026gt; \u0026lt;/div\u0026gt; 调色盘 1 {\u0026lt; swatches \u0026#34;#537d5d\u0026#34; \u0026#34;#73946b\u0026#34; \u0026#34;#9ebc8a\u0026#34; \u0026gt;} 代码 1.新建 layouts/shortcodes/swatches.html：\r1 2 3 4 5 \u0026lt;div class=\u0026#34;swatches-container\u0026#34;\u0026gt; {{ range .Params }} \u0026lt;div class=\u0026#34;swatch\u0026#34; style=\u0026#34;background-color: {{ . }}\u0026#34; title=\u0026#34;{{ . }}\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; {{ end }} \u0026lt;/div\u0026gt; 代码 2.在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 // 调色盘 .swatches-container { display: flex; gap: 1rem; margin: 1.5rem 0; } .swatch { flex: 1 1 0; height: 3rem; border-radius: 0.5rem; } 图片轮播 1 {\u0026lt; imgloop \u0026#34;1,2,3\u0026#34; \u0026gt;} 代码 1.新建 imgloop.html ：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 {{ if .Site.Params.enableimgloop }} \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/Swiper/3.4.2/css/swiper.min.css\u0026#34;\u0026gt; \u0026lt;!-- Swiper --\u0026gt; \u0026lt;div class=\u0026#34;swiper-container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;swiper-wrapper\u0026#34;\u0026gt; {{$itItems := split (.Get 0) \u0026#34;,\u0026#34;}} {{range $itItems }} \u0026lt;div class=\u0026#34;swiper-slide\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;{{.}}\u0026#34; alt=\u0026#34;\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; {{end}} \u0026lt;/div\u0026gt; \u0026lt;!-- Add Pagination --\u0026gt; \u0026lt;div class=\u0026#34;swiper-pagination\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/Swiper/3.4.2/js/swiper.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;!-- Initialize Swiper --\u0026gt; \u0026lt;script\u0026gt; var swiper = new Swiper(\u0026#39;.swiper-container\u0026#39;, { pagination: \u0026#39;.swiper-pagination\u0026#39;, paginationClickable: true, //自动调节高度 autoHeight: true, //键盘左右方向键控制 keyboardControl : true, //鼠标滑轮控制 mousewheelControl : true, //自动切换 //autoplay : 5000, //懒加载 lazyLoading : true, lazyLoadingInPrevNext : true, //无限循环 loop : true, }); \u0026lt;/script\u0026gt; {{ end }} 代码 2.在 custom.scss 中添加：\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //图片轮播 .swiper-container { max-width: 820px; margin: 2em auto; } .swiper-slide { text-align: center; font-size: 18px; background-color: #fff; /* Center slide text vertically */ display: flex; justify-content: center; align-items: center; img { margin: 0 !important; } } 多图排版 1 ![1](1.jpg)![2](2.jpg)![3](3.jpg) 代码 在 custom.scss 中添加：\r1 2 3 4 5 6 7 .post-content p:has(\u0026gt; img:nth-child(2)){column-count:2;column-gap:8px;margin:6px 0;} .post-content p:has(\u0026gt; img:nth-child(3)){column-count:3;} .post-content p:has(\u0026gt; img:nth-child(4)){column-count:4;} .post-content p:has(\u0026gt; img:nth-child(5)){column-count:5;} .post-content p:has(\u0026gt; img:nth-child(6)){column-count:4;} .post-content p:has(\u0026gt; img:nth-child(2)) img{display:inherit;} .post-content p:has(\u0026gt; img:nth-child(6)) img{margin-bottom:8px;} 小技巧 跳转 跳转地址\n点击跳转\n1 2 3 \u0026lt;span id=\u0026#34;big\u0026#34;\u0026gt;跳转地址\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;\u0026lt;a href=\u0026#34;#big\u0026#34; style=\u0026#34;text-decoration: underline;\u0026#34;\u0026gt;点击跳转\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt; 特别感谢 以上内容参考了下列博文：\nHugo Stack主题装修笔记 Hugo Stack 魔改美化 Hugo | 在 Stack 主题上可行的短代码们 Hugo Stack 主题美化 赛博房子装修计划（1）文章样式 【Hugo】修改博客背景并引入动态背景 【Hugo】Stack主题自定义修改 ","date":"2025-04-11T15:28:13+08:00","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/c0a12f8a-8820-4558-b140-01026e6a610c.jpg","permalink":"http://localhost:1313/p/daima/","title":"stack主题调整"},{"content":"最开始了解博客是通过o3o的writee，那会儿研究公告栏看到就顺手注册了，然后就一直搁置……直到去年十月我从wxw赛博搬家到星屑，9号那天（特意去翻了记录确认）在tl看大家聊起星屑的博客，这才意识到，原来writee也是博客呀！\n随后用站长给的邀请码注册了星屑博客，并且抛弃了writee，因为它的文章不能删除！非常浅尝辄止地研究了一下新玩具，还借用了kon酱的美丽配色代码，但是因为一直没有系统输出文章，所以慢慢又忘却了。\n4月1日那天怎么是愚人节啊，看到阿南在tl上说要尝试搭建hugo博客，热血上头就说要一起，说的时候没想太多，但是按照阿南发给我的教程，我俩一点一点研究，居然真的搭出来了！\n说到代码相关，我是完全的小白，和代码唯一的接触就是之前在星屑写的几个插件，就这还是用的kon酱的代码，只是单纯的修改填充内容，还出了各种错误，幸好有kon酱一直耐心解答。\n随后进入了紧张刺激的主题装修环节！我从MemE到stack，最终和阿南一起确定了blowfish，开始了究极精神折磨。\n这个过程只能说，一把辛酸泪，一步一bug，我俩研究不同的设置，然后再互相教，完全照抄对面的操作，但就是不停报错，问gpt老师也不管用，直到赛博神医菜菜子热心为我俩提供帮助！\n我的主题安装后第一步改语言就出了问题，最后是把文件打包给菜菜子帮我改好再发给我的（磕头.jpg），后面还问了数不胜数的傻瓜问题，友不厌其烦地解答。还有阿南也是，虽然说是我俩一起研究，但我研究什么都报错，阿南总是把自己研究明白的代码直接发给我让我抄，真的泪目了TT\n本来我最开始注册的博客1安装的MemE，后来又注册了博客2研究stack，发现整不明白又切换成blowfish。博客2勉强运行后，我还是想用博客1的域名，于是试图把博客2的内容合并到博客1，果不其然bug频出……最后放弃了，注册了博客3，然后一点点照搬了博客2的内容，并且终于在昨天晚上成功发布。\n但是！好巧不巧！昨晚上床后，刷到一个非常完美的stack主题教程，我对stack的热情又重新燃起，或者说是一种不甘心，非得把它整明白不可，于是今天开工，初始化了博客1（上次合并的时候就是想初始化来着但是没成功），并且成功运行了！\n之所以速度这么快，一是前几天的经验累积（怎么不算熟能生巧呢），二就是这个教程！天哪简直是菩萨级别，直接贴在这里供有需要的人参考，完全是傻子都可以照抄的程度！\n教程1 教程2 总之，到目前为止，我的博客进入平稳运行阶段，暂时不再需要装修啦，会努力多写点东西的，不能辜负这段时间的呕心沥血_(:3 」∠ )_\n","date":"2025-04-08T21:22:22+08:00","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/b1211ddb-eb79-481d-b419-7123be01831f.jpg","permalink":"http://localhost:1313/p/yunxing/","title":"博客正式运行纪念"},{"content":"准备工作 下载ffmpeg 下载地址：https://github.com/BtbN/FFmpeg-Builds/releases ，选择ffmpeg-master-latest-win64-gpl-shared.zip 版本\n安装ffmpeg 假设已经解压，进入文件夹并且点开 bin 文件夹，此时文件路径为 xx\\ffmpeg\\ffmpeg\\bin，在地址栏复制路径\nwin+R，输入sysdm.cpl，按ENTER回车\n进入高级选项卡，点击环境变量\n在系统变量部分，找到Path变量，点击编辑\n在编辑环境变量窗口中，点击新建，然后将上面的路径粘贴到这里\n依次点确定关闭所有窗口\n测试是否成功 win+R打开命提示符，输入cmd\r然后ENTER回车，弹出框中输入ffmpeg，如果步骤无误会显示ffmpeg相关信息：\nffmpeg version 2024-10-27-git-bb57b78013-full_build-www.gyan.dev Copyright (c) 2000-2024 the FFmpeg developers\rbuilt with gcc 14.2.0 (Rev1, Built by MSYS2 project)\rconfiguration: --enable-gpl --enable-version3 --enable-static --disable-w32threads --disable-autodetect --enable-fontconfig --enable-iconv --enable-gnutls --enable-libxml2 --enable-gmp --enable-bzlib --enable-lzma --enable-libsnappy --enable-zlib --enable-librist --enable-libsrt --enable-libssh --enable-libzmq --enable-avisynth --enable-libbluray --enable-libcaca --enable-sdl2 --enable-libaribb24 --enable-libaribcaption --enable-libdav1d --enable-libdavs2 --enable-libopenjpeg --enable-libquirc --enable-libuavs3d --enable-libxevd --enable-libzvbi --enable-libqrencode --enable-librav1e --enable-libsvtav1 --enable-libvvenc --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxavs2 --enable-libxeve --enable-libxvid --enable-libaom --enable-libjxl --enable-libvpx --enable-mediafoundation --enable-libass --enable-frei0r --enable-libfreetype --enable-libfribidi --enable-libharfbuzz --enable-liblensfun --enable-libvidstab --enable-libvmaf --enable-libzimg --enable-amf --enable-cuda-llvm --enable-cuvid --enable-dxva2 --enable-d3d11va --enable-d3d12va --enable-ffnvcodec --enable-libvpl --enable-nvdec --enable-nvenc --enable-vaapi --enable-libshaderc --enable-vulkan --enable-libplacebo --enable-opencl --enable-libcdio --enable-libgme --enable-libmodplug --enable-libopenmpt --enable-libopencore-amrwb --enable-libmp3lame --enable-libshine --enable-libtheora --enable-libtwolame --enable-libvo-amrwbenc --enable-libcodec2 --enable-libilbc --enable-libgsm --enable-liblc3 --enable-libopencore-amrnb --enable-libopus --enable-libspeex --enable-libvorbis --enable-ladspa --enable-libbs2b --enable-libflite --enable-libmysofa --enable-librubberband --enable-libsoxr --enable-chromaprint\rlibavutil 59. 46.100 / 59. 46.100\rlibavcodec 61. 22.100 / 61. 22.100\rlibavformat 61. 9.100 / 61. 9.100\rlibavdevice 61. 4.100 / 61. 4.100\rlibavfilter 10. 6.100 / 10. 6.100\rlibswscale 8. 9.101 / 8. 9.101\rlibswresample 5. 4.100 / 5. 4.100\rlibpostproc 58. 4.100 / 58. 4.100\rUniversal media converter\rusage: ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\rUse -h to get full help or, even better, run 'man ffmpeg'\r实际运用 需要自己修改文件路径与内容。\n转换格式 假设我需要转换的文件名为 gavv01.mkv，并且文件路径为 D:\\resource\\gavv\nwin+R打开命提示符，输入cmd 然后ENTER回车，输入 cd D:\\resource\\gavv 导航到 gavv 文件夹；或者直接在对应文件夹打开命令提示符\n单个转换 输入 ffmpeg -i \u0026quot;gavv01.mkv\u0026quot; -c:v copy -c:a copy \u0026quot;gavv01.mp4\u0026quot; ，按ENTER回车，其中 gavv01.mkv 是需要转换的文件，gavv01.mp4 是转换后的文件\n批量转换 输入for %i in (*.mkv) do ffmpeg -i \u0026quot;%i\u0026quot; -c:v copy -c:a copy \u0026quot;%~ni.mp4\u0026quot;，按ENTER回车，这个命令会转换对应文件夹中的所有文件\n如果显示文件错误 1.win+R打开命提示符，输入cmd然后ENTER回车\n2.输入D:，ENTER回车\n3.输入cd \"D:\\resource\\gavv\"（双引号确保路径正确）\n4.输入dir，回车，确认该文件夹中有需要转换的文件\n压缩视频 crf值越高压缩得越严重，视频体积也越小，20接近无损，22为高质量，24中高画质推荐用，28有明显压缩痕迹。\n假设我需要压缩的文件名为 gavv01.mp4，并且文件路径为 D:\\resource\\gavv\nwin+R打开命提示符，输入cmd 然后ENTER回车，输入 cd D:\\resource\\gavv 导航到 gavv 文件夹；或者直接在对应文件夹打开命令提示符\n单个压缩 输入ffmpeg -i \u0026quot;D:\\resource\\gavv\\gavv01.mp4\u0026quot; -c:v libx265 -crf 23 -c:a copy \u0026quot;D:\\resource\\gavv\\gavv01 压缩后.mp4\u0026quot;，按ENTER回车\n批量压缩 新建文本文档，用记事本打开，将以下内容粘贴进去：\n1 2 3 4 5 6 7 8 9 10 @echo off set \u0026#34;input_dir=D:\\resource\\gavv\u0026#34; set \u0026#34;output_dir=D:D:\\resource\\gavv\\压缩后\u0026#34; for %%F in (\u0026#34;%input_dir%\\*.mp4\u0026#34;) do ( echo 正在压缩：%%~nxF ffmpeg -i \u0026#34;%%F\u0026#34; -c:v libx265 -crf 23 -c:a copy \u0026#34;%output_dir%\\%%~nxF\u0026#34; ) echo 全部完成！ pause 第2行 input 是视频所在地址，第3行 output 是输出地址，我这里新建了一个“压缩后”文件夹\n点击另存为，修改文件名为 xx.bat，保存类型选择所有文件(*.*)，编码选择 ANSI，保存地址与需要转换的文件在同一文件夹\n双击此 bat 文件即可运行\n裁剪视频 假设我需要裁剪的文件名为 gavv01.mp4，文件路径为 D:\\resource\\gavv，裁剪开始时间为 00:01:20，结束时间为 00:03:20，\n新建 bat 文档，步骤同批量压缩，文档内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 @echo off setlocal set \u0026#34;input=D:\\resource\\gavv\\gavv01.mp44\u0026#34; echo 正在裁剪片段1：出场 ffmpeg -y -i \u0026#34;%input%\u0026#34; -ss 00:01:20 -to 00:03:20 -avoid_negative_ts 1 -b:v 4000k -c:v libx264 -pass 1 -an -f mp4 NUL ffmpeg -y -i \u0026#34;%input%\u0026#34; -ss 00:01:20 -to 00:03:20 -avoid_negative_ts 1 -b:v 4000k -c:v libx264 -c:a copy -pass 2 \u0026#34;D:\\resource\\gavv\\出场.mp4\u0026#34; del ffmpeg2pass-0.log echo 所有片段已完成。 pause ","date":"2025-04-02T00:00:00Z","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/dc679c68-35cd-4492-87cc-c3ba485219d7.jpg","permalink":"http://localhost:1313/p/ffmpeg/","title":"ffmpeg的视频处理方案"},{"content":"注册LeanCloud 注册地址：https://console.leancloud.app/register（国际版） （如果是自己网页搜索的，注意必须注册国际版）\n进入控制台，点击左上角创建应用并起一个名字 ，这里必须选免费的开发版\n进入应用，点击项目左下角设置，再选择左下角的 设置、应用凭证，记录 App ID、App Key 和 Master Key 的内容。\nVercel 部署 (服务端) 部署地址：vercel Deploy 如果你未登录的话，Vercel 会让你注册或登录，请使用 GitHub 账户进行快捷登录。\n在右侧 Private Repository Name 位置输入仓库名，点击 Create，大概等1分钟左右，会弹出来一个**Congratulations！**的弹窗\n注意：waline和你的博客在vercel是两个独立的项目 点击 Continue to Dashboard 进入管理页面，对应项目Domains下面的 xxx.vercel.app就是自动分配的访问网址域名，点击可以直接进入留言区\n点击右上角头像，点击 Dashboard ，看到刚刚建立的项目，点击项目右上角三个点后再点击 Setting 进入设置\n点击左侧 Environment Variables，Key 处填写LEAN_ID, LEAN_KEY 和 LEAN_MASTER_KEY ，它们的值分别对应上一步在 LeanCloud 中获得的 APP ID，APP KEY， Master Key，Value 处填写对应的内容，最后点击 save\n引入博客 stack主题 登录 vercel，点击右上角头像，点击 Dashboard，复制 Domains 下面自动分配网址域名\n进入博客文件夹里的**\\themes\\stack\\layouts\\partials\\comments\\provider**，将waline.html文件复制到对应的根目录文件夹\n在博客文件夹中打开 hugo.yaml，下拉到 params\n找到 comments:，将 provider:修改为 provider: waline\n找到waline:，将serverURL:修改为serverURL: https://xxx.vercel.app，将lang:修改为lang: zh-CN\n保存并关闭\n测试能否正常运行 编辑好文件后，在donbro文件夹的空白处单击右键，选择Open Git Bash Here，在弹出的命令行界面中输入ugo server --disableFastRender，如果步骤正确，会显示：\nWatching for changes in D:\\blog\\github_wsw_hugo\\donbro\\{archetypes,content,theme\rs}\rWatching for config changes in D:\\blog\\github_wsw_hugo\\donbro\\config.toml\rStart building sites …\rhugo v0.145.0-666444f0a52132f9fec9f71cf25b441cc6a4f355+extended windows/amd64 Bu\rildDate=2025-02-26T15:41:25Z VendorInfo=gohugoio\r| ZH-CN\r-------------------+--------\rPages | 11\rPaginator pages | 0\rNon-page files | 0\rStatic files | 11\rProcessed images | 0\rAliases | 0\rCleaned | 0\rBuilt in 110 ms\rEnvironment: \"development\"\rServing pages from disk\rRunning in Fast Render Mode. For full rebuilds on change: hugo server --disableF\rastRender\rWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\rPress Ctrl+C to stop\r显示结果最后的 http://localhost:1313 就是预览网址\n推送到Github 打开 Github Desktop ，登录 Github 账号\n点击左边 Changes 栏，点击文件名可以看到具体内容，勾选要同步的文件，下方 Summary(required) 为本次更新行为命名，再点击最下面 Commit to main 提交，最后点击上方第三个大黑框 Push origin 进行推送\n评论管理 部署完成后，请访问你的域名进行注册。首个注册的人会被设定成管理员。 管理员登陆后，即可看到评论管理界面。在这里可以修改、标记或删除评论。 用户也可通过评论框注册账号，登陆后会跳转到自己的档案页。 ","date":"2025-04-02T00:00:00Z","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/44e51c87-6651-441d-8dc3-e188f9f30d8e.jpg","permalink":"http://localhost:1313/p/waline/","title":"配置waline添加留言功能"},{"content":" 感谢“小球飞鱼”的教程 ，以及在这个过程提供帮助的各位朋友。\n下载软件，注册账号 Hugo 下载地址：https://github.com/gohugoio/hugo/releases 打开链接后往下拉，找到 Assets ，下载最新的带 extended 的版本，或者直接点 hugo_extended_0.145.0_windows-amd64.zip 下载\n下载后解压到博客文件夹在的位置，比如说，我在 D 盘建了一个 blog 文件，那么解压后的 hugo 文件夹就要移动到这个 blog 文件夹里（后文举例都用这个）\nGit 下载地址：https://git-scm.com 打开链接后点击 Download for Windows ，下载 64-bit Git for Windows Setup ，或者直接点 Git-2.49.0-64-bit.exe 下载\n下载后安装，安装路径随意，一直点下一步直到安装成功\nGithub账号 注册网址：https://github.com 最好用谷歌邮箱，或者别的国外邮箱\nGithub Desktop 下载地址：https://github.com/apps/desktop VScode 下载地址：https://code.visualstudio.com 下载后点击左下角设置，再点击 Extensions（扩展），搜索 Chinese Language Pack for Visual Studio Code（汉化） 和 Markdown All in One 插件，点击 install 安装\n启动汉化插件 Ctrl+Shift+P打开命令搜索框，输入 configure language ，点击 Display language ，点击中文（简体），在弹出框中点 Restart 重启 VScode 安装HUGO Hugo.exe 放在 D 盘的 blog 文件中，可以从文件上方看到文件路径为 D:\\blog\\hugo_extended_0.145.0_windows-amd64 ，在地址栏复制路径\nwin+R，输入sysdm.cpl，按ENTER回车 进入高级选项卡，点击环境变量 在系统变量部分，找到 Path 变量，点击编辑 在编辑环境变量窗口中，点击新建，然后将上面的路径粘贴到这里 依次点确定关闭所有窗口 测试是否成功 在D:\\blog中任意空白处右键，点击Open Git Bash Here，在弹出的命令行界面中输入hugo version，如果步骤正确，会显示：\nhugo v0.145.0-666444f0a52132f9fec9f71cf25b441cc6a4f355+extended windows/amd64 BuildDate=2025-02-26T15:41:25Z VendorInfo=gohugoio\r显示结果中的0.145.0是hugo的版本号，后面需要用\n搭建博客 注册Verce：https://vercel.com ，点击右上角 Sign Up ，选择 I'm working on personal projects（hobby），给自己取个名字，再点击 Continue\n选择使用 Github 账号注册，登录前面注册的github账号，弹出授权窗口时，点击 Authorize Vercel\n在 Let\u0026rsquo;s build something new 页面，点击右边 Clone Template 项目下方的 Browse All Templates ，左边搜索栏输入 hugo，会出现 Hugo Starter 项目，点开\n如果没有看到这个界面，点击右上角头像，点击 Dashboard，点击右上角黑色的 Add New project 点击左边 Deploy，点击 Git Scope的下拉列表，点击 Add GitHub Org or Account，弹出安装窗口，点击 Install\n在Git Scope下拉列表中点击你的Github账户，在右侧 Private Repository Name 位置输入仓库名，我这里输入 donbro （这个名字很重要！它决定了博客的域名！），点击 Create ，大概等1分钟左右，会弹出来一个Congratulations！的弹窗，代表 Vercel 已经自动搭建好一个 Hugo 博客\n点击 Continue to Dashboard 进入管理页面，Domains下面的 donbro.vercel.app 就是自动分配的访问网址域名，点击可以直接进入博客\n点击右上角头像，点击 Dashboard，看到刚刚建立的 Hugo 项目，点击项目右上角三个点后再点击 Setting 进入设置\n点击左侧 Environment Variables ，key 处填写 HUGO_VERSION，Value 处填写版本号(上面写了怎么查)，最后点击 save\n推送到Github 这个博客更新的顺序是，你在本地新建一篇md文件，然后通过 github Desktop 同步更新到 Github，然后再更新到你的博客域名\n打开 Github Desktop，登录 Github 账号，选择 Clone a repository from the internet…（也就是把刚刚在 vercel 建立的项目克隆到 github ） 跳出的 Clone a repository 弹框中，注意下面的 Local path，确认选择的是自动建立的 donbro 空文件夹 点击左边 Changes 栏，点击文件名可以看到具体内容，勾选要同步的文件，下方 Summary(required) 为本次更新行为命名，再点击最下面 Commit to main 提交，最后点击上方第三个大黑框 Push origin 进行推送 登录 github 网页，点击右上角头像，选择 Your repositories ，点击 donbro 仓库，左边是更新记录和文件，右边可以看到一个蓝色链接 donbro.vercel.app ，点击就可以进入博客，也可以从vercel项目中进入 如果你想在同步到 github 之前预览效果 编辑好文件后，在donbro文件夹的空白处单击右键，选择Open Git Bash Here，在弹出的命令行界面中输入hugo server，如果步骤正确，会显示：\nWatching for changes in D:\\blog\\github_wsw_hugo\\donbro\\{archetypes,content,theme\rs}\rWatching for config changes in D:\\blog\\github_wsw_hugo\\donbro\\config.toml\rStart building sites …\rhugo v0.145.0-666444f0a52132f9fec9f71cf25b441cc6a4f355+extended windows/amd64 Bu\rildDate=2025-02-26T15:41:25Z VendorInfo=gohugoio\r| ZH-CN\r-------------------+--------\rPages | 11\rPaginator pages | 0\rNon-page files | 0\rStatic files | 11\rProcessed images | 0\rAliases | 0\rCleaned | 0\rBuilt in 110 ms\rEnvironment: \"development\"\rServing pages from disk\rRunning in Fast Render Mode. For full rebuilds on change: hugo server --disableF\rastRender\rWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\rPress Ctrl+C to stop\r显示结果最后的 http://localhost:1313 就是预览网址\n新建文章 在 donbro 文件夹的空白处单击右键，选择 Open Git Bash Here，在弹出的命令行界面中输入 hugo new posts/文章名字.md，回车后，hugo 会在 \\donbro\\content\\posts 文件夹中创建一个新的 md 文件，用 Markdown 编辑器（比如 Tyopa ）打开后，就可以写文章了\n文章属性模板 用以指定文章的标题、分类、Tag等，打开 \\donbro\\content\\posts\\archetypes 文件夹下的 default.md 文件，将下面的代码粘贴进去，不需要的属性可以自由删除：\n1 2 3 4 5 6 7 8 9 title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; author: \u0026#34;\u0026#34; description: \u0026#34;\u0026#34; //描述 date: {{ .Date }} categories: [\u0026#34;\u0026#34;] //分类 tags: [\u0026#34;\u0026#34;,\u0026#34;\u0026#34;] //标签 draft: false //草稿，填true则不显示在博客中 image： //略缩图链接 slug： //别名，分享文章链接时用，建议别用汉字 提示：单击右键，选择Open Git Bash Here，然后在git中输入命令的前提是，右键时文件夹内必须有config.toml文件。 安装主题 其实这篇流水账记录到上面就已经结束了，剩下的是更复杂的花里胡哨部分~\n在此附上Hugo主题下载网址：https://themes.gohugo.io/ ，大（剩）家（下）自（的）由（我）发（不）挥（会）吧（了）！\n","date":"2025-04-02T01:00:56+08:00","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/8114f986-0e3a-4b7d-b8fc-65865cd5f636.jpg","permalink":"http://localhost:1313/p/hugo/","title":"Hugo-小白博客部署记录"}]