[{"content":"高亮标记 好喜欢蓝色！ 折叠 叠叠乐 这是第一个段落的内容。\n这是第二个段落的内容，位于折叠部分，实际使用别忘了双括号！\n模糊 一些手动打码效果！\n但总之换行的话就加个空标签。\n黑色打码 数据删除！数据删除！\n但总之换行的话就加个空标签。\n抖动 这是基本的摇晃效果。 这个段落有剧烈摇晃效果。 这个段落有慢速摇晃效果。 这个段落有轻微摇晃效果。 这个段落有水平摇晃效果。 这个段落有垂直摇晃效果。 这个段落有旋转摇晃效果。 这个段落有透明度变化摇晃效果。 这个段落有疯狂摇晃效果。 这个段落在悬停时冻结。 这个段落持续摇晃。 渐变 我挑的配色很好看吧！\n好喜欢蓝色（再次）（再次）\n但总之换行的话就加个空标签。\n文字位置 文字居左\n文字居中\n文字居右\n引用 这里写引用内容，实际使用记得换成双括号。\n作者 作品名 中心引用 左右两边的符号可以自定义\n使用需要双括号\n换行需要空标签\n键盘样式 Ctrl+Alt+Del\n评分 卡片链接 可以在这里插入链接假装是卡片式链接。 好像不能插入图片？ 换行需要空标签。实际使用需要双括号。 时间轴 2025-04-01 试试 新建博客 成功了好耶！ 2025-04-02 到的 场吃得好 充不了电补充进来！ 图片轮播 对话框 我 2025-04-01 这里是自定义的信息内容。 你 2025-04-01 这是恢复。 neodb ","date":"2025-04-11T15:28:13+08:00","permalink":"https://donbro.vercel.app/p/%E7%9F%AD%E4%BB%A3%E7%A0%81%E5%BA%94%E7%94%A8/","title":"短代码应用"},{"content":"星屑被广大星友们戏称为联邦宇宙的QQ空间，还是至尊黄钻版本，其花里胡哨程度可见一斑，如果你是个喜欢装扮自己账号的人，那可算是来对地方了！当然如果你觉得太花哨，也可以隐藏，自由程度相当高喔\nmisskey系实例的功能星屑当然都有，鉴于有些朋友是从mastodon搬过来，所以这方面也会顺带讲一下，互通的内容就略过，本文的重点是如何花式玩转星屑的特别功能\n默认你已经拥有一个星屑账号，如果没有，可以问星友要喔，找我也可以\n邀请码 如果你的主页有“好耶好耶”，则表示你可以点击左上角站点图标-邀请生成邀请码，达成要求有两条：\n注册星屑账号7天 发布了100个帖子 每7天最多拥有3个邀请码，每个邀请码有效时间1个月，如果旧的邀请码没用或者没过期，7天后也不会生成新的\n发帖框 可见性，有四个选项：公开、首页、仅关注者、指定用户（私信）\n禁用联合：如果开启，帖子仅星屑站可见，只会显示在本地时间轴，外站的朋友即使关注了你也是看不到的\n接受表情回应：misskey系最大特色\n插入附件：支持16张图，在网盘功能详细讲\n投票：最高10个选项，发布后更改投票内容会导致票数清零\ncw警告\n标签tag：打开后在箭头展示的下方直接写标签内容，发布新帖子时会默认上次的标签，记得关掉！这样发布的标签会直接跟在正文后面，如果需要另起一行，手动正文里输入#标签内容\n表情：正文输入:可以快速调用，弹出框输入表情代码可以快速查询，常用的表情可以固定在最上方，这个设置里讲\n添加装饰：即MFM快速选择器\n使用MFM的常见办法：\n输入$ 插件转换 点击帖子右下角复制内容，再粘贴到自己的输入框 MFM是misskey系一大特色，这里简单展示几种效果\n定时发帖\n预定的帖子列表：查看编辑已定时的帖子\n@提及\nMFM语法使用说明书：查看MFM语法具体效果，可以直接复制\n预览\n左侧导航栏 如果导航栏没显示，说明在“更多！”里面\n时间线 不需要时间线的可以通过【设置-客户端设置-Stelpolva Plus】隐藏，还可以手动用css隐藏不同时间轴的重复内容，这个在信息过载里单独介绍\n首页：关注用户的公开帖子包括星屑用户和其他实例用户\n你关注的人给其他人的公开回复也会显示在这里 如果有未关注用户给你的帖子回复，你只能在通知里查看而不能在首页刷到 本地：星屑用户发布的公开帖子\n社交：首页+本地\nBubble：推荐时间线，显示站长选择的部分misskey系实例的公开帖子\n全局：所有与星屑联合的实例的公开帖子\n关注中：显示“你关注的人”、“关注你的人”、“你的互关”的最新一条帖子\n「只显示原创帖子」的简洁版主页，用户顺序按照最新帖子的发布时间排序，无法搜索\n列表：这个功能是从导航栏进入的，因此下面单独介绍\n天线：同列表\n频道：同列表\n刷新\n更多：时光机在这里，可以显示指定时间的帖子，另外个人主页也有单独的时光机\n网盘、收藏、便签 网盘：发帖时上传的所有文件，包括图片音频视频等，可以分类进文件夹并通过命名搜索 如果删除网盘内文件，包含该文件的帖子内的文件也会消失，但帖子本身依然存在 新用户800MB，注册3天+拥有3个关注者+发布50个帖子后，升级为8G，后续还会增加 也可以不通过帖子直接在网盘里上传 收藏 便签：可以分类的收藏夹，可以在【设置-常规设置】中打开显示在帖子下方，每个便签上限 200 条帖子 搜索、清除缓存 搜索：可以用关键词搜索指定用户的帖子，或者全局搜索 清除缓存：表情无法正常显示时专用 列表、天线、切换页面 列表：将任何联邦宇宙用户加入一个列表，可以不用关注就能刷到ta的帖子 加入方式有两种：\n点击用户主页右上角三个点-加入列表 点击帖子右下角三个点-用户-加入列表 天线：自行抓取包含关键词的帖子，可以设定帖子内容和来源以及添加屏蔽词\n注意它只会抓取天线建立以后发布的帖子\n切换页面，切换成Deck模式——类似mastodon，可以自由添加不同栏目，更改每个栏目的宽度等\n频道 频道帖子在星屑内只有关注频道的人才能刷到，外站的朋友则不影响\n频道帖子在时间线上表现为帖子左边带有颜色条，帖子下方带有频道名，从外站看没有颜色条，频道名也会会变成对应tag 如果修改频道名，之前的帖子在外站看依然是之前的tag并不会更改 发布频道帖子理论上要点进频道内，但没关系我们有很多快捷办法\n右侧小部件1：支持跳转到任意链接\n点击编辑部件、增加AiScript APP、设置，把下面的css粘贴进去并修改内容：\n1 2 3 4 5 Ui:render([ Ui:C:mfm({ text: `[倾情推荐](https://pari.cafe) [这里填显示的内容](这里填跳转的链接，可以自己复制更多，站外的链接也可以跳转哦) ` }) ]) 右侧小部件2：显示全部已关注频道\n点击编辑部件、增加AiScript APP、设置，把下面的css粘贴进去：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /// @ 0.12.4 // チャンネル一覧ウィジェット let channels = Mk:api(\u0026#34;channels/followed\u0026#34; {limit: 100}) var chStrArr = [] let newLine = ` ` each let ch channels { chStrArr.push(\u0026#34;･ \u0026#34;) chStrArr.push(`[{ch.name}](https://stelpolva.moe/channels/{ch.id})`) chStrArr.push(newLine) } Ui:render([ Ui:C:mfm({text: chStrArr.join()}) ]) 发帖框插件：最上面的发帖框介绍有这个内容，使用的时候直接点击就可以发布到对应频道了\n复制下面的css到“设置-插件-安装插件”：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 /// @ 0.12.4 ### { name: \u0026#39;追加频道发帖按钮\u0026#39; version: \u0026#39;1.1\u0026#39; author: \u0026#39;@piga@misskey.io\u0026#39; description: \u0026#39;在发帖窗口增加发帖到所关注的频道的按钮。\u0026#39; permissions: [\u0026#34;read:channels\u0026#34;] config: { limit: { type: \u0026#39;number\u0026#39; label: \u0026#39;能读取的频道上限\u0026#39; description: \u0026#39;如果关注的频道增加了记得改这里哦\u0026#39; default: 30 } } } var CH_ARR = [] // objのnullなプロパティを再帰的に除去 https://qiita.com/saki-lere/items/851c4500d56659d15c9c @remove_null_property(object) { if Core:type(object) != \u0026#39;obj\u0026#39; { return object } let new_obj = {} each let kv Obj:kvs(object) { let v = remove_null_property(kv[1]) if Core:type(v) != \u0026#39;null\u0026#39; { Obj:set(new_obj kv[0] v) } } return new_obj } // 投稿先をidのチャンネルへ切り替える @switch_destination(id) { var new_arr = [] each(let i, CH_ARR) { if i.id == id { i.is_post = true } else { i.is_post = false } new_arr.push(i) } CH_ARR = new_arr } // 投稿先のチャンネルIDを取得 @get_destination_id() { var r_id = null var new_arr = [] each(let i, CH_ARR) { if i.is_post { i.is_post = false r_id = i.id } new_arr.push(i) } CH_ARR = new_arr return r_id } // フォロー中のチャンネルを取得し投稿フォームにボタンを作る let channels = Mk:api(\u0026#39;channels/followed\u0026#39; {limit: Plugin:config.limit}) each(let i, channels) { let ch = { id: i.id is_post: false } CH_ARR.push(ch) Plugin:register_post_form_action(`发至{i.name}`, @(form update) { switch_destination(i.id) Mk:dialog(\u0026#39;\u0026#39; `现在发帖位置变成📺[{i.name}]了哦`) }) } Plugin:register_post_form_action(`发至时间线`, @(form update) { switch_destination(\u0026#39;\u0026#39;) Mk:dialog(\u0026#39;\u0026#39; `现在发帖位置变成🌐时间线了哦`) }) // 投稿時に投稿先のチャンネルIDを書き換える // チャンネルの投稿フォームを使っている場合、チャンネルIDは書き換えない Plugin:register_note_post_interruptor(@(note) { if note.channelId == null { note.channelId = get_destination_id() } return remove_null_property(note) }) 把频道内的帖子转发到频道外\n需要频道管理员打开“允许在频道外转帖及引用”\n复制帖子链接后，粘贴到新的发帖框，在弹出来的“是否引用此链接”框中选择取消\n不要直接点原帖子的转发/引用键\n成就、games、play 成就：misskey系列都有的成就系统 games：misskey自带的小游戏 play：用户自制上传的游戏，目前有扫雷、生存游戏以及各种随机转盘 页面、图库 页面：发布长文的地方 图库：建立自己的图库放图片，这个操作区别于发帖，不会显示在时间轴上 设置 设置的内容实在是太多，因此一些一看就懂的我就略过了……重点讲一下一些很能改善体验的、很有特色的\n基本设置 个人资料 修改背景：这个是自己主页的背景 装饰：头像装饰，最多可以叠8个，可以重复 昵称：汉字表情代码之间必须有空格才能在mastodon正常显示，如果你不在意mastodon就不用管 被关注时显示的消息：这个在个人主页也有显示 接受表情回应：这里是全局设置，发帖框也可以单独设置 高级设置：如果把账号设置成猫，你发的“”会变成“” 隐私：开启关注请求需要批准 表情符号选择器 更改默认点赞的表情 分别置顶回应、发帖的表情 网盘 查看网盘容量和使用情况 设置是否保留原文件名 设置是否默认媒体文件标记敏感 客户端设置 常规设置：这里介绍一些建议打开的选项\n折叠已经看过的帖子 自动折叠被回复帖子 在贴文下方显示便签按钮：方便收藏到便签 自动载入帖子下的对话 启用扩展 MFM 启用 MFM 动画：不打开就不显示别人发的mfm 显示高级 MFM 选择器：不打开就没有发帖框介绍里编号9的图标 显示帖子的回应数 时间线上的帖子分开显示 显示头像挂件：嫌花哨可以不开 一只猫猫朋友：没什么用就是很萌 自定义css：这个在后文讲信息过载的时候讲 Stelpolva Plus：星屑特殊功能\n改字体\n禁用时间线\n高级发帖模式：给帖子添加前缀或后缀，打开后在发帖框添加，添加好后除非你删掉不然每条帖子都会带上\n注意：希望前后缀另起一行的话记得空行\n批量化私密\n24小时表情回应统计\n主题：在星屑本地搜主题有很多，按喜好来就行\n壁纸：时间轴背景，只有半透明主题才会显示\n怎么把普通主题改成半透明：（教程来自星友@bidyy ）\n1、进入设置-主题-看你现在用的主题是哪个\n2、进入主题管理，选择你现在使用的主题\n3、复制主题代码\n4、进入安装主题，粘贴代码\n5、将代码里bg的颜色从hex转换rgba（可以使用在线转换网站，搜一下就有），例如：#FF5733-\u0026gt;rgba(255, 87, 51, 1.0)\n6、调整rgba中的最后一位，这个是控制透明度的，例：rgba(255, 87, 51, 0.45)\n7、修改id和name，不要和已有主题重复，点击安装\n8、在使用的主题里选择你刚刚安装的主题\n夹带私货安利一下我做的主题：SereneAccent 导航栏：设置导航栏选项，没选的会进入“更多！”\n插件：目前星屑的插件大多是转换用的\n安装：复制插件代码，进入“设置-插件-安装插件”，粘贴并安装\n更新：必须删除原来的版本再重新安装\n使用：在发帖框点击对应的插件即可\n这里贴两个博主码的插件：一键活字乱刷 、花里胡哨（气泡版） ，个人觉得很好玩，感兴趣的朋友可以试试\n其他设置 隐藏和屏蔽：屏蔽用户或实例 导入和导出：账号迁移的话可以导入旧实例的帖子 备份设置：比如在手机上设置好主题之类的，创建备份，然后在电脑上选择应用，就可以同步 右侧小部件 这里只推荐几个博主本人亲测好用的\n投稿窗口：像mastodon一样的发帖窗口 个人资料：跳转个人主页更加方便快捷 AiScript APP：本人用来实现多种跳转功能 便签：和导航栏的便签不一样，这个类似于一个小备忘录，随手复制了什么可以粘贴在这里 信息过载如何拯救 以下内容来自站长@nosquito和kon酱@cpursuit\n隐藏气泡：粘贴到“常规设置-自定义css”\n1 2 3 4 5 6 /* 帖文详情之外 不显示 文字背景、边框、特殊颜色 */ .SkNote-text-9t7i span, .SkNoteSub-text-VAZL span, .SkNoteSimple-text-5RJB span, .SkNote-collapsedRenoteTargetText-pNlm span { background: transparent !important; border: none !important; color: unset !important; } 通知页不显示头像装饰\n1 2 /* 通知页 不显示 头像装饰 */ .pages-notifications-notifications-tfIf .MkAvatar-decoration-1fJq {display: none;} 时间轴不显示头像装饰\n1 2 /* 时间轴 不显示 头像装饰 */ .pages-timeline-tl-jptQ .MkAvatar-decoration-1fJq {display: none;} 时间轴不显示帖子下方回应\n1 2 /* 时间轴 不显示 帖子下方回应 */ .pages-timeline-tl-jptQ .MkReactionsViewer-root-lT1y {display: none;} 在Bubble、全局时间轴上隐藏本地内容\n1 2 3 4 5 6 7 8 /* Bubble时间轴 不显示 本实例内容 */ .MkTimeline[data-timeline-src=\u0026#34;bubble\u0026#34;] .d-is-local { display: none; } /* 全局时间轴 不显示 本实例内容 */ .MkTimeline[data-timeline-src=\u0026#34;global\u0026#34;] .d-is-local { display: none; } 时间轴不显示被回复帖子\n1 2 3 4 /* 时间轴 不显示 被回复帖子 */ .SkNote-replyTo-De1I { display:none; } 时间轴不显示频道内容\n1 2 3 4 /* 时间轴 不显示 频道内容 */ .pages-timeline-tl-jptQ .SkNote-root-1aC8:has(a.SkNote-channel-wQdW) { display:none; } 修改被回复原帖的外观\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* 时间轴、个人资料 被回复原帖的外观修改 */ .SkNote-replyTo-De1I { font-size: 90%; opacity: 0.75; /* 修改字体大小和透明度 */ } .SkNote-replyTo-De1I .MkMediaList-container-bIzI { height: 10em; /* 修改原帖媒体栏大小 */ } .SkNote-replyTo-De1I .MkReactionsViewer-root-lT1y { display: none; /* 不显示原帖收到的表情回应 */ } .SkNote-replyTo-De1I .MkSubNoteContent-reply-8ivL { display: none; /* 不显示原帖内容开头的箭头 */ } .SkNote-replyTo-De1I .SkNoteSub-footer-8Mdq { display: none; /* 不显示原帖下方操作菜单 */ } 好了，这篇啰里吧嗦的介绍/安利到这里终于结束了，总之欢迎大家来星屑玩！\n","date":"2025-04-09T09:52:03+08:00","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/ada427a7-2b1f-4092-bcb1-6834c2899ba0.jpg","permalink":"https://donbro.vercel.app/p/stelpolva/","title":"無名星屑（Stelpolva）食用指南"},{"content":"最开始了解博客是通过o3o的writee，那会儿研究公告栏看到就顺手注册了，然后就一直搁置……直到去年十月我从wxw赛博搬家到星屑，9号那天（特意去翻了记录确认）在tl看大家聊起星屑的博客，这才意识到，原来writee也是博客呀！\n随后用站长给的邀请码注册了星屑博客，并且抛弃了writee，因为它的文章不能删除！非常浅尝辄止地研究了一下新玩具，还借用了kon酱的美丽配色代码，但是因为一直没有系统输出文章，所以慢慢又忘却了。\n4月1日那天怎么是愚人节啊，看到阿南在tl上说要尝试搭建hugo博客，热血上头就说要一起，说的时候没想太多，但是按照阿南发给我的教程，我俩一点一点研究，居然真的搭出来了！\n说到代码相关，我是完全的小白，和代码唯一的接触就是之前在星屑写的几个插件，就这还是用的kon酱的代码，只是单纯的修改填充内容，还出了各种错误，幸好有kon酱一直耐心解答。\n随后进入了紧张刺激的主题装修环节！我从MemE到stack，最终和阿南一起确定了blowfish，开始了究极精神折磨。\n这个过程只能说，一把辛酸泪，一步一bug，我俩研究不同的设置，然后再互相教，完全照抄对面的操作，但就是不停报错，问gpt老师也不管用，直到赛博神医菜菜子热心为我俩提供帮助！\n我的主题安装后第一步改语言就出了问题，最后是把文件打包给菜菜子帮我改好再发给我的（磕头.jpg），后面还问了数不胜数的傻瓜问题，友不厌其烦地解答。还有阿南也是，虽然说是我俩一起研究，但我研究什么都报错，阿南总是把自己研究明白的代码直接发给我让我抄，真的泪目了TT\n本来我最开始注册的博客1安装的MemE，后来又注册了博客2研究stack，发现整不明白又切换成blowfish。博客2勉强运行后，我还是想用博客1的域名，于是试图把博客2的内容合并到博客1，果不其然bug频出……最后放弃了，注册了博客3，然后一点点照搬了博客2的内容，并且终于在昨天晚上成功发布。\n但是！好巧不巧！昨晚上床后，刷到一个非常完美的stack主题教程，我对stack的热情又重新燃起，或者说是一种不甘心，非得把它整明白不可，于是今天开工，初始化了博客1（上次合并的时候就是想初始化来着但是没成功），并且成功运行了！\n之所以速度这么快，一是前几天的经验累积（怎么不算熟能生巧呢），二就是这个教程！天哪简直是菩萨级别，直接贴在这里供有需要的人参考，完全是傻子都可以照抄的程度！\n教程1 教程2 总之，到目前为止，我的博客进入平稳运行阶段，暂时不再需要装修啦，会努力多写点东西的，不能辜负这段时间的呕心沥血_(:3 」∠ )_\n","date":"2025-04-08T21:22:22+08:00","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/b1211ddb-eb79-481d-b419-7123be01831f.jpg","permalink":"https://donbro.vercel.app/p/yunxing/","title":"博客正式运行纪念"},{"content":"注册LeanCloud 注册地址：https://console.leancloud.app/register（国际版） （如果是自己网页搜索的，注意必须注册国际版）\n进入控制台，点击左上角创建应用并起一个名字 ，这里必须选免费的开发版\n进入应用，点击项目左下角设置，再选择左下角的 设置、应用凭证，记录 App ID、App Key 和 Master Key 的内容。\nVercel 部署 (服务端) 部署地址：vercel Deploy 如果你未登录的话，Vercel 会让你注册或登录，请使用 GitHub 账户进行快捷登录。\n在右侧 Private Repository Name 位置输入仓库名，点击 Create，大概等1分钟左右，会弹出来一个**Congratulations！**的弹窗\n注意：waline和你的博客在vercel是两个独立的项目 点击 Continue to Dashboard 进入管理页面，对应项目Domains下面的 xxx.vercel.app就是自动分配的访问网址域名，点击可以直接进入留言区\n点击右上角头像，点击 Dashboard ，看到刚刚建立的项目，点击项目右上角三个点后再点击 Setting 进入设置\n点击左侧 Environment Variables，Key 处填写LEAN_ID, LEAN_KEY 和 LEAN_MASTER_KEY ，它们的值分别对应上一步在 LeanCloud 中获得的 APP ID，APP KEY， Master Key，Value 处填写对应的内容，最后点击 save\n引入博客 stack主题 登录 vercel，点击右上角头像，点击 Dashboard，复制 Domains 下面自动分配网址域名\n进入博客文件夹里的**\\themes\\stack\\layouts\\partials\\comments\\provider**，将waline.html文件复制到对应的根目录文件夹\n在博客文件夹中打开 hugo.yaml，下拉到 params\n找到 comments:，将 provider:修改为 provider: waline\n找到waline:，将serverURL:修改为serverURL: https://xxx.vercel.app，将lang:修改为lang: zh-CN\n保存并关闭\n测试能否正常运行 编辑好文件后，在donbro文件夹的空白处单击右键，选择Open Git Bash Here，在弹出的命令行界面中输入ugo server --disableFastRender，如果步骤正确，会显示：\nWatching for changes in D:\\blog\\github_wsw_hugo\\donbro\\{archetypes,content,theme\rs}\rWatching for config changes in D:\\blog\\github_wsw_hugo\\donbro\\config.toml\rStart building sites …\rhugo v0.145.0-666444f0a52132f9fec9f71cf25b441cc6a4f355+extended windows/amd64 Bu\rildDate=2025-02-26T15:41:25Z VendorInfo=gohugoio\r| ZH-CN\r-------------------+--------\rPages | 11\rPaginator pages | 0\rNon-page files | 0\rStatic files | 11\rProcessed images | 0\rAliases | 0\rCleaned | 0\rBuilt in 110 ms\rEnvironment: \"development\"\rServing pages from disk\rRunning in Fast Render Mode. For full rebuilds on change: hugo server --disableF\rastRender\rWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\rPress Ctrl+C to stop\r显示结果最后的 http://localhost:1313 就是预览网址\n推送到Github 打开 Github Desktop ，登录 Github 账号\n点击左边 Changes 栏，点击文件名可以看到具体内容，勾选要同步的文件，下方 Summary(required) 为本次更新行为命名，再点击最下面 Commit to main 提交，最后点击上方第三个大黑框 Push origin 进行推送\n评论管理 部署完成后，请访问你的域名进行注册。首个注册的人会被设定成管理员。 管理员登陆后，即可看到评论管理界面。在这里可以修改、标记或删除评论。 用户也可通过评论框注册账号，登陆后会跳转到自己的档案页。 ","date":"2025-04-02T00:00:00Z","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/44e51c87-6651-441d-8dc3-e188f9f30d8e.jpg","permalink":"https://donbro.vercel.app/p/waline/","title":"配置waline添加留言功能"},{"content":"下载ffmpeg 下载地址：https://github.com/BtbN/FFmpeg-Builds/releases ，选择ffmpeg-master-latest-win64-gpl-shared.zip 版本\n安装ffmpeg 假设已经解压，进入文件夹并且点开 bin 文件夹，此时文件路径为 xx\\ffmpeg\\ffmpeg\\bin，在地址栏复制路径\nwin+R，输入sysmd.cpl，按ENTER回车\n进入高级选项卡，点击环境变量\n在系统变量部分，找到Path变量，点击编辑\n在编辑环境变量窗口中，点击新建，然后将上面的路径粘贴到这里\n依次点确定关闭所有窗口\n测试是否成功 win+R打开命提示符，输入cmd\r然后ENTER回车，弹出框中输入ffmpeg，如果步骤无误会显示ffmpeg相关信息：\nffmpeg version 2024-10-27-git-bb57b78013-full_build-www.gyan.dev Copyright (c) 2000-2024 the FFmpeg developers\rbuilt with gcc 14.2.0 (Rev1, Built by MSYS2 project)\rconfiguration: --enable-gpl --enable-version3 --enable-static --disable-w32threads --disable-autodetect --enable-fontconfig --enable-iconv --enable-gnutls --enable-libxml2 --enable-gmp --enable-bzlib --enable-lzma --enable-libsnappy --enable-zlib --enable-librist --enable-libsrt --enable-libssh --enable-libzmq --enable-avisynth --enable-libbluray --enable-libcaca --enable-sdl2 --enable-libaribb24 --enable-libaribcaption --enable-libdav1d --enable-libdavs2 --enable-libopenjpeg --enable-libquirc --enable-libuavs3d --enable-libxevd --enable-libzvbi --enable-libqrencode --enable-librav1e --enable-libsvtav1 --enable-libvvenc --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxavs2 --enable-libxeve --enable-libxvid --enable-libaom --enable-libjxl --enable-libvpx --enable-mediafoundation --enable-libass --enable-frei0r --enable-libfreetype --enable-libfribidi --enable-libharfbuzz --enable-liblensfun --enable-libvidstab --enable-libvmaf --enable-libzimg --enable-amf --enable-cuda-llvm --enable-cuvid --enable-dxva2 --enable-d3d11va --enable-d3d12va --enable-ffnvcodec --enable-libvpl --enable-nvdec --enable-nvenc --enable-vaapi --enable-libshaderc --enable-vulkan --enable-libplacebo --enable-opencl --enable-libcdio --enable-libgme --enable-libmodplug --enable-libopenmpt --enable-libopencore-amrwb --enable-libmp3lame --enable-libshine --enable-libtheora --enable-libtwolame --enable-libvo-amrwbenc --enable-libcodec2 --enable-libilbc --enable-libgsm --enable-liblc3 --enable-libopencore-amrnb --enable-libopus --enable-libspeex --enable-libvorbis --enable-ladspa --enable-libbs2b --enable-libflite --enable-libmysofa --enable-librubberband --enable-libsoxr --enable-chromaprint\rlibavutil 59. 46.100 / 59. 46.100\rlibavcodec 61. 22.100 / 61. 22.100\rlibavformat 61. 9.100 / 61. 9.100\rlibavdevice 61. 4.100 / 61. 4.100\rlibavfilter 10. 6.100 / 10. 6.100\rlibswscale 8. 9.101 / 8. 9.101\rlibswresample 5. 4.100 / 5. 4.100\rlibpostproc 58. 4.100 / 58. 4.100\rUniversal media converter\rusage: ffmpeg [options] [[infile options] -i infile]... {[outfile options] outfile}...\rUse -h to get full help or, even better, run 'man ffmpeg'\r转换格式 假设我需要转换的文件名为 gavv01.mkv，并且文件路径为 D:\\resource\\gavv\nwin+R打开命提示符，输入cmd 然后ENTER回车 输入 cd D:\\resource\\gavv 导航到 gavv 文件夹 单个转换：输入 ffmpeg -i \u0026quot;gavv01.mkv\u0026quot; -c:v copy -c:a copy \u0026quot;gavv01.mp4\u0026quot; ，按ENTER回车，其中 gavv01.mkv 是需要转换的文件，gavv01.mp4 是转换后的文件 批量转换：输入 for %i in (*.mkv) do ffmpeg -i \u0026quot;%i\u0026quot; -c:v copy -c:a copy \u0026quot;%~ni.mp4\u0026quot; 切换来源文件夹：输入 cd D:新文件夹 如果显示文件错误 1.win+R打开命提示符，输入cmd然后ENTER回车\n2.输入D:，ENTER回车\n3.输入cd \"D:\\resource\\gavv\"（双引号确保路径正确）\n4.输入dir，回车，确认该文件夹中有需要转换的文件\n","date":"2025-04-02T00:00:00Z","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/dc679c68-35cd-4492-87cc-c3ba485219d7.jpg","permalink":"https://donbro.vercel.app/p/ffmpeg/","title":"使用ffmpeg进行视频格式的无损转换"},{"content":" 感谢“小球飞鱼”的教程 ，以及在这个过程提供帮助的各位朋友。\n下载软件，注册账号 Hugo 下载地址：https://github.com/gohugoio/hugo/releases 打开链接后往下拉，找到 Assets ，下载最新的带 extended 的版本，或者直接点 hugo_extended_0.145.0_windows-amd64.zip 下载\n下载后解压到解压博客文件夹在的位置，比如说，我在 D 盘建了一个 blog 文件，那么解压后的 hugo 文件夹就要移动到这个 blog 文件夹里（后文举例都用这个）\nGit 下载地址：https://git-scm.com 打开链接后点击 Download for Windows ，下载 64-bit Git for Windows Setup ，或者直接点 Git-2.49.0-64-bit.exe 下载\n下载后安装，安装路径随意，一直点下一步直到安装成功\nGithub账号 注册网址：https://github.com 最好用谷歌邮箱，或者别的国外邮箱\nGithub Desktop 下载地址：https://github.com/apps/desktop VScode 下载地址：https://code.visualstudio.com 下载后点击左下角设置，再点击 Extensions（扩展），搜索 Chinese Language Pack for Visual Studio Code（汉化） 和 Markdown All in One 插件，点击 install 安装\n启动汉化插件 Ctrl+Shift+P打开命令搜索框，输入 configure language ，点击 Display language ，点击中文（简体），在弹出框中点 Restart 重启 VScode 安装HUGO Hugo.exe 放在 D 盘的 blog 文件中，可以从文件上方看到文件路径为 D:\\blog\\hugo_extended_0.145.0_windows-amd64 ，在地址栏复制路径\nwin+R，输入sysmd.cpl，按ENTER回车 进入高级选项卡，点击环境变量 在系统变量部分，找到 Path 变量，点击编辑 在编辑环境变量窗口中，点击新建，然后将上面的路径粘贴到这里 依次点确定关闭所有窗口 测试是否成功 在D:\\blog中任意空白处右键，点击Open Git Bash Here，在弹出的命令行界面中输入hugo version，如果步骤正确，会显示：\nhugo v0.145.0-666444f0a52132f9fec9f71cf25b441cc6a4f355+extended windows/amd64 BuildDate=2025-02-26T15:41:25Z VendorInfo=gohugoio\r显示结果中的0.145.0是hugo的版本号，后面需要用\n搭建博客 注册Verce：https://vercel.com ，点击右上角 Sign Up ，选择 I'm working on personal projects（hobby），给自己取个名字，再点击 Continue\n选择使用 Github 账号注册，登录前面注册的github账号，弹出授权窗口时，点击 Authorize Vercel\n在 Let\u0026rsquo;s build something new 页面，点击右边 Clone Template 项目下方的 Browse All Templates ，左边搜索栏输入 hugo，会出现 Hugo Starter 项目，点开\n如果没有看到这个界面，点击右上角头像，点击 Dashboard，点击右上角黑色的 Add New project 点击左边 Deploy，点击 Git Scope的下拉列表，点击 Add GitHub Org or Account，弹出安装窗口，点击 Install\n在Git Scope下拉列表中点击你的Github账户，在右侧 Private Repository Name 位置输入仓库名，我这里输入 donbro （这个名字很重要！它决定了博客的域名！），点击 Create ，大概等1分钟左右，会弹出来一个Congratulations！的弹窗，代表 Vercel 已经自动搭建好一个 Hugo 博客\n点击 Continue to Dashboard 进入管理页面，Domains下面的 donbro.vercel.app 就是自动分配的访问网址域名，点击可以直接进入博客\n点击右上角头像，点击 Dashboard，看到刚刚建立的 Hugo 项目，点击项目右上角三个点后再点击 Setting 进入设置\n点击左侧 Environment Variables ，key 处填写 HUGO_VERSION，Value 处填写版本号(上面写了怎么查)，最后点击 save\n推送到Github 这个博客更新的顺序是，你在本地新建一篇md文件，然后通过 github Desktop 同步更新到 Github，然后再更新到你的博客域名\n打开 Github Desktop，登录 Github 账号，选择 Clone a repository from the internet…（也就是把刚刚在 vercel 建立的项目克隆到 github ） 跳出的 Clone a repository 弹框中，注意下面的 Local path，确认选择的是自动建立的 donbro 空文件夹 点击左边 Changes 栏，点击文件名可以看到具体内容，勾选要同步的文件，下方 Summary(required) 为本次更新行为命名，再点击最下面 Commit to main 提交，最后点击上方第三个大黑框 Push origin 进行推送 登录 github 网页，点击右上角头像，选择 Your repositories ，点击 donbro 仓库，左边是更新记录和文件，右边可以看到一个蓝色链接 donbro.vercel.app ，点击就可以进入博客，也可以从vercel项目中进入 如果你想在同步到 github 之前预览效果 编辑好文件后，在donbro文件夹的空白处单击右键，选择Open Git Bash Here，在弹出的命令行界面中输入hugo server，如果步骤正确，会显示：\nWatching for changes in D:\\blog\\github_wsw_hugo\\donbro\\{archetypes,content,theme\rs}\rWatching for config changes in D:\\blog\\github_wsw_hugo\\donbro\\config.toml\rStart building sites …\rhugo v0.145.0-666444f0a52132f9fec9f71cf25b441cc6a4f355+extended windows/amd64 Bu\rildDate=2025-02-26T15:41:25Z VendorInfo=gohugoio\r| ZH-CN\r-------------------+--------\rPages | 11\rPaginator pages | 0\rNon-page files | 0\rStatic files | 11\rProcessed images | 0\rAliases | 0\rCleaned | 0\rBuilt in 110 ms\rEnvironment: \"development\"\rServing pages from disk\rRunning in Fast Render Mode. For full rebuilds on change: hugo server --disableF\rastRender\rWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)\rPress Ctrl+C to stop\r显示结果最后的 http://localhost:1313 就是预览网址\n新建文章 在 donbro 文件夹的空白处单击右键，选择 Open Git Bash Here，在弹出的命令行界面中输入 hugo new posts/文章名字.md，回车后，hugo 会在 \\donbro\\content\\posts 文件夹中创建一个新的 md 文件，用 Markdown 编辑器（比如 Tyopa ）打开后，就可以写文章了\n文章属性模板 用以指定文章的标题、分类、Tag等，打开 \\donbro\\content\\posts\\archetypes 文件夹下的 default.md 文件，将下面的代码粘贴进去，不需要的属性可以自由删除：\n1 2 3 4 5 6 7 8 9 title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; author: \u0026#34;\u0026#34; description: \u0026#34;\u0026#34; //描述 date: {{ .Date }} categories: [\u0026#34;\u0026#34;] //分类 tags: [\u0026#34;\u0026#34;,\u0026#34;\u0026#34;] //标签 draft: false //草稿，填true则不显示在博客中 image： //略缩图链接 slug： //别名，分享文章链接时用，建议别用汉字 提示：单击右键，选择Open Git Bash Here，然后在git中输入命令的前提是，右键时文件夹内必须有config.toml文件。 安装主题 其实这篇流水账记录到上面就已经结束了，剩下的是更复杂的花里胡哨部分~\n在此附上Hugo主题下载网址：https://themes.gohugo.io/ ，大（剩）家（下）自（的）由（我）发（不）挥（会）吧（了）！\n","date":"2025-04-02T01:00:56+08:00","image":"https://chatstorage.dvd.moe/dvdchat/dvdchat/8114f986-0e3a-4b7d-b8fc-65865cd5f636.jpg","permalink":"https://donbro.vercel.app/p/hugo/","title":"Hugo-小白博客部署记录"}]